{"meta":{"title":"Eunoia Blog","subtitle":"Study & Programming for Web Programmer","description":null,"author":"Nayoung kim","url":"http://nayoungkim0918.github.io"},"pages":[{"title":"All categories","date":"2018-09-10T17:50:09.000Z","updated":"2018-09-10T17:50:36.944Z","comments":true,"path":"categories/index.html","permalink":"http://nayoungkim0918.github.io/categories/index.html","excerpt":"","text":""},{"title":"All tags","date":"2018-09-10T17:49:21.000Z","updated":"2018-09-10T17:49:52.368Z","comments":true,"path":"tags/index.html","permalink":"http://nayoungkim0918.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo_Themes_Hueman_Customizing","slug":"Hexo/Hexo-Themes-Hueman-Customizing","date":"2018-09-25T17:35:41.000Z","updated":"2018-09-25T17:35:41.000Z","comments":true,"path":"2018/09/26/Hexo/Hexo-Themes-Hueman-Customizing/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/26/Hexo/Hexo-Themes-Hueman-Customizing/","excerpt":"","text":"","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"Do-It-02-4.md","slug":"Do-It/Do-It-02-4","date":"2018-09-24T14:10:49.000Z","updated":"2018-09-24T14:10:49.000Z","comments":true,"path":"2018/09/24/Do-It/Do-It-02-4/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/24/Do-It/Do-It-02-4/","excerpt":"","text":"","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"[Do It!] 02-3. 연산자","slug":"Do-It/Do-It-02-3","date":"2018-09-20T16:24:19.000Z","updated":"2018-09-20T16:24:19.000Z","comments":true,"path":"2018/09/21/Do-It/Do-It-02-3/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/21/Do-It/Do-It-02-3/","excerpt":"","text":"02. 자바스크립트 기초 문법 자바스크립트의 기초 문법 선언문, 주석, 변수, 자료형, 연산자 03, 04장, 제이쿼리의 초석 02-3. 연산자(Operator) ① 연산자란? ② 산술 연산자 ③ 문자 결합 연산자 ④ 대입 연산자 ⑤ 증감 연산자 ⑥ 비교 연산자 ⑦ 논리 연산자 ⑧ 연산자 우선순위 ⑨ 삼항 조건 연산자 1. 연산자란? 연산자(Operator) 컴퓨터 상에서의 계산 작업을 위한 도구 자바스크립트에서 사용하는 연산자 산술, 문자 결합, 대입(복합 대입), 증감, 비교, 논리, 삼항 조건 2. 산술 연산자 산수 시간에 배운 사칙연산의 기능과 동일 더하기(+), 빼기(-), 곱하기(*), 나누기(/), 나머지(%) 반드시 2개의 연산 대상 데이터 필요 산술 연산자의 종류 종류 기본형 설명 + A+B 더하기 - A-B 빼기 * A*B 곱하기 / A/B 나누기 % A%B 나머지 산술 연산자 예제 02_3_operator_ex1_test.html 12345678910111213141516171819var num1 = 15; var num2 = 2;var result;document.write(\"숫자1 : \" + num1 + \"&lt;br&gt;\" + \" 숫자2 : \" + num2 + \"&lt;br&gt;&lt;br&gt;\"); result = num1 + num2;document.write(\"더하기 : \" + result + \"&lt;br&gt;\"); result = num1 - num2; document.write(\"빼기 : \" + result + \"&lt;br&gt;\"); result = num1 * num2; document.write(\"곱하기 : \" + result + \"&lt;br&gt;\"); result = num1 / num2; document.write(\"나누기 : \" + result + \"&lt;br&gt;\"); result = num1 % num2; document.write(\"나머지 : \" + result + \"&lt;br&gt;\"); 3. 문자 결합 연산자 피연산자(연산 대상 데이터)가 문자형 데이터 여러 개의 문자를 하나씩 문자형 데이터로 결합할 때 사용 더하기 피연산자에 문자형 데이터가 한 개 라도 포함된 경우 다른 피연산자의 데이터는 자동으로 문자형 데이터로 형변환 문자 결합이 이뤄져 하나의 문자형 데이터 반환 문자 결합 연산자 기본형12345문자형 데이터 + 문자형 데이터 = 하나의 문자형 데이터ex) \"do it \" + \"javascript\" = \"do it javascript\";문자형 데이터 + 숫자형 데이터 = 하나의 문자형 데이터ex) \"100\" + 200 = \"100200\"; 문자 결합 연산자 예제 02_3_operator_ex2_test.html12345678910111213141516var t1 = \"학교종이 \"; var t2 = \"땡땡땡 \";var t3 = 8282;var t4 = \"어서 모이자 \";var t5 = 100000;var t6 = 10000;var result;result = t1 + t2 + t3 + t4 + t5 + t6; document.write(\"문자 결합(산술괄호 X) : \" + result + \"&lt;br&gt;\"); result = t1 + t2 + t3 + t4 + (t5 + t6); document.write(\"문자 결합(산술괄호 O) : \" + result); result = result - t2;document.write(\"문자 분리(-) : \" + result); 산술 연산자를 포함하여 문자 결합 연산자를 수행했을 경우, 괄호가 없는 경우에는 숫자형 데이터가 문자형 데이터로 변환되어 연산된다. 하지만 괄호로 우선순위를 주었을 경우에는 산술 연산의 수행 결과가 문자형 데이터로 변환되어 문자 결합된다. 안된다는 걸 알고 있지만 - 를 이용해 문자를 분리할 수 있는 지도 테스트 해봤다. 결과는 역시나 NaN으로 출력된다. NaN(Not A Number) : 빼기 연산(-)은 산술 연산만 가능하다. 즉 숫자형 데이터만 가능하기 때문에 숫자형 데이터가 아닌 문자형 데이터는 빼기 연산이 불가능 하다는 뜻이다. 4. 대입 연산자 연산된 데이터를 변수에 저장할 때 사용 (=) 복합 대입 연산자 (+=, =-, *=, /=, %=) 산술 연산자와 대입 연산자가 복합적으로 적용된 것 대입 연산자의 종류 종류 풀이 A = B A = B A += B A = A+B A *= B A = A*B A /= B A = A/B A %= B A = A%B 대입 연산자 기본 예제 02_3_operator_ex3_1_test.html1234567891011121314151617var num1 = 10; var num2 = 3;num1 += num2;document.write(\"num1 += num2 = \" + num1 + \"&lt;br&gt;\"); num1 -= num2;document.write(\"num1 -= num2 = \" + num1 + \"&lt;br&gt;\"); num1 *= num2;document.write(\"num1 *= num2 = \" + num1 + \"&lt;br&gt;\"); num1 /= num2;document.write(\"num1 /= num2 = \" + num1 + \"&lt;br&gt;\"); num1 %= num2;document.write(\"num1 %= num2 = \" + num1 + \"&lt;br&gt;\"); 여러 개의 데이터로 저장된 HTML 태그를 복합 대입 연산자를 이용해 하나의 문자로 결합한 후 화면에 출력하는 예제 02_3_operator_ex3_2_test.html12345678var str = \"&lt;table border='1'&gt;\"; str += \"&lt;tr&gt;\";str += \"&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;\";str += \"&lt;/tr&gt;\";str += \"&lt;/table&gt;\"; document.write(str); 5. 증감 연산자 숫자형 데이터를 1씩 증가시키거나 감소시키는 데 사용 증가연산자 ++ , 감소연산자 – 단항 연산자 피연산자가 1개만 필요 변수의 위치에 따라 결괏값이 달라짐 증감 연산자 기본형123456789101112131. 변수의 값을 1만큼 감소 뱐수--; 또는 --변수;2. 변수의 값을 1만큼 증가 뱐수++; 또는 ++변수;------------------------------------------------------------ 1. 먼저 B의 값을 1만큼 증가시킨 후, 증가된 B의 값을 A에 대입 var A = ++B;2. 먼저 B의 값을 A에 대입시킨 후, B의 값을 1만큼 증가 var A = B++; 증감 연산자를 사용해 변수에 저장된 숫자를 증가하거나 감소해 문서에 출력하는 예제 02_3_operator_ex4_test.html12345678910111213141516171819var num1 = 10;var num2 = 20;var result;//num1(10)의 값이 1만큼 감소되어 num1에 9 저장num1--; document.write(\"10-- = \" + num1 + \"&lt;br&gt;\"); //num1(9)의 값이 1만큼 증가되어 num1에 10 저장num1++; document.write(\"9++ = \" + num1 + \"&lt;br&gt;\"); //num2(20)의 값이 result에 저장되고, num2의 값이 1만큼 증가되어 num2에 21 저장result = num2++; document.write(\"20++ = \" + result + \"&lt;br&gt;\"); //num2(21)의 값이 1만큼 증가되어 num2에 22가 저장되고, num2의 값이 변수 result에 저장result = ++num2; document.write(\"++21 = \" + result + \"&lt;br&gt;\"); 6. 비교 연산자 두 데이터를 ‘크다, 작다, 같다’와 같이 비교 할 때 사용하는 연산자 연산된 결괏값은 true(참), false(거짓) 로 논리형 데이터 반환 비교 연산자의 종류 종류 설명 비고 A &gt; B A가 B보다 크다 - A &lt; B A가 B보다 작다 - A &gt;= B A가 B보다 크거나 같다 - A &lt;= B A가 B보다 작거나 같다 - A == B A와 B는 같다 숫자 비교시, 자료형(숫자형, 문자형)에 관계없이 표기된 숫자만 일치하면 true 반환 [EX] 숫자형 10과 문자형 “10”은 같은 것으로 인식됨 A==B의 결괏값 = true A != B A와 B보다 다르다 숫자 비교시, 자료형(숫자형, 문자형)에 관계없이 표기된 숫자만 다르면 true 반환 [EX] 숫자형 10과 문자형 “10”은 같은 것으로 인식됨 A!=B의 결괏값 = false A === B A와 B는 같다 숫자 비교시, 반드시 표기된 숫자와 자료형도 일치해야 true 반환 [EX] 10과 “10”을 비교한 경우, 표기된 숫자는 같지만 자료형이 다르므로 false 반환 A !== B A와 B보다 다르다 숫자 비교시, 반드시 표기된 숫자와 자료형도 불일치해야 true 반환 [EX] 10과 “10”을 비교한 경우, 표기된 숫자는 같지만 자료형이 다르므로 true 반환 비교 연산자 ==, != 피연산자의 자료형이 비교 연산자의 실행 결과에 영향을 미치지 않는다. [EX] 변수 k에는 숫자형 데이터 10 저장, 변수 m에는 문자형 데이터 “10” 저장 숫자형 데이터 10과 같은지 비교했을 때, 둘 다 ture를 반환한다.123var k = 10, m = \"10\";k == 10; //truem == 10; //true 비교 연산자 ===, !== 피연산자의 자료형 에 따라 결괏값이 달라진다. [EX] 변수 k에는 숫자형 데이터 10 저장, 변수 m에는 문자형 데이터 “10” 저장 숫자형 데이터 10과 같은지 비교했을 때, k는 숫자형 데이터이므로, k===10은 true 반환 m은 문자형 데이터이므로, m===10은 false 반환123var k = 10, m = \"10\";k === 10; //truem === 10; //false 비교 연산자 예제 02_3_operator_ex5_test.html 1234567891011121314151617181920212223242526var a = 10;var b = 20;var c = 30;var f = \"20\";var result;result = a &gt; b; //falsedocument.write(\"10 &gt; 20 = \" + result, \"&lt;br&gt;\"); result = a &lt; b; //truedocument.write(\"10 &lt; 20 = \" + result, \"&lt;br&gt;\"); result = a &lt;= b; //truedocument.write(\"10 &lt;= 20 = \" + result, \"&lt;br&gt;\"); result = b == f; //truedocument.write(\"20 == '20' = \" + result, \"&lt;br&gt;\"); result = a != b; //truedocument.write(\"10 != 20 = \" + result, \"&lt;br&gt;\"); result = b === f; //falsedocument.write(\"20 === '20' = \" + result, \"&lt;br&gt;\"); result = b !== f; //truedocument.write(\"20 !== '20' = \" + result, \"&lt;br&gt;\"); 7. 논리 연산자 ||(or), &amp;&amp;(and), !(not) 피연산자가 논리형 데이터인 true 또는 false로 결괏값 반환 논리 연산자의 종류 종류 설명 II OR 연산자 피연산자 중 값이 하나라도 true가 존재하면 true 반환 &amp;&amp; AND 연산자 피연산자 중 값이 하나라도 false가 존재하면 false 반환 ! NOT 연산자 단항 연산자 피연산자의 값이 true이면 반대로 false 반환 8. 연산자 우선순위 일반적인 산수에도 우선순위가 존재하듯이 코딩 연산자에도 우선순위가 존재한다.① (괄호)② 단항 연산자 : –, ++, !③ 산술 연산자 : *, /, %, +, -④ 비교 연산자 : &gt;, &gt;=, &lt;, &lt;=, ==, ===, !==, !=⑤ 논리 연산자 : &amp;&amp; ||⑥ 대입/복합대입 연산자 : =, +=, -=, *=, /=, %= [EX] ++A * B &lt;= C 변수 A에 데이터 1을 증가시키고 B를 곱한 다음 그 값을 C와 비교한 후 최종 결괏값 반환 연산자 우선순위 예제(비교+논리) 02_3_operator_ex6_test.html 1234567891011121314151617181920var a = 10;var b = 20;var m = 30;var n = 40;var result;result = a &gt; b || b &gt;= m || m &gt; n; //false || false || falsedocument.write(\"10 &gt; 20 || 20 &gt;= 30 || 30 &gt; 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //false result = a &gt; b || b &gt;= m || m &lt;= n; //false || false || truedocument.write(\"10 &gt; 20 || 20 &gt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //true result = a &lt;= b &amp;&amp; b &gt;= m &amp;&amp; m &lt;= n; //true &amp;&amp; false &amp;&amp; truedocument.write(\"10 &lt;= 20 || 20 &gt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //false result = a &lt;= b &amp;&amp; b &lt;= m &amp;&amp; m &lt;= n; //true &amp;&amp; true &amp;&amp; truedocument.write(\"10 &lt;= 20 || 20 &lt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //true result = !(a&gt;b); //!false를 계산document.write(\"!(10 &gt; 20) : \" + result); //true 9. 삼항 조건 연산자 다음 포스트 : 02-3. 변수_실습 : 적정 체중을 구하는 테스트기 만들기","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"연산자","slug":"연산자","permalink":"http://nayoungkim0918.github.io/tags/연산자/"}]},{"title":"Do It! 02-2. 변수","slug":"Do-It/Do-It-02-2","date":"2018-09-12T20:02:36.000Z","updated":"2018-09-12T20:02:36.000Z","comments":true,"path":"2018/09/13/Do-It/Do-It-02-2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/13/Do-It/Do-It-02-2/","excerpt":"","text":"02. 자바스크립트 기초 문법 자바스크립트의 기초 문법 선언문, 주석, 변수, 자료형, 연산자 03, 04장, 제이쿼리의 초석 02-2. 변수1. 변수란? 변수(Variables) 변하는 데이터(값)를 저장할 수 있는 메모리 공간 데이터를 담을 수 있는 그릇 하나의 변수에는 한 개의 데이터만 저장 새로운 데이터가 들어오면 기존 데이터는 메모리 공간에서 지워짐 저장 가능한 데이터 종류 문자형(String) 숫자형(Number) 논리형(Boolean) 빈 데이터(Null) 변수 선언 var 변수명; 또는 var 변수명 = 값; 변수명 한글 사용 불가 영문, 숫자, 특수문자(_, $) 낙타(Camel) 표기법 단어와 단어의 조합 두 번째 단어의 첫 글자는 대문자로 표기 두번째 단어의 첫 글자는 대문자로 표기 의미에 맞게 만들기 mathNum : 수학 시험 점수 저장변수 변수 선언 변수명으로 데이터를 저장할 수 있는 공간 생성 초기에는 값이 등록되지 않은 상태(Null)로 생성 1234&lt;script&gt; var box; //box 라는 이름의 변수 선언 (Null 상태) box = 100; //변수 box에 숫자형 데이터 100 대입&lt;/script&gt; 변수에는 하나의 값만 대입 가능 변수에 값을 2번 넣는 경우 기존에 저장돼 있던 값은 삭제되고 새로운 데이터 저장 02_2_var_ex1_test.html12345678&lt;script&gt; var box; //box라는 이름의 변수 선언 document.write(box + \"\\n\"); //undefined box = 100; //변수 box에 숫자형 데이터 100 대입 document.write(box + \"\\n\"); //100 box = 30; //변수 box에 숫자형 데이터 30 대입 document.write(box) //30 &lt;/script&gt; 책에서는 가장 마지막 box만 출력했지만 값을 비교해보고 싶어서 모든 경우의 box를 출력해봤다.① var box; =&gt; undefined 값이 지정되지 않은 변수는 null 이라고 출력될 줄 알았지만 undefined 라고 출력됐다. 아직 확실하게 안 것은 아니지만 javascript는 기존에 배웠던 C언어 나 JAVA 와는 달리 자료형이 따로 없다. 문자형은 Char/String, 숫자형은 Int/Float/Double 등의 지정된 자료형 을 반드시 선언과 동시에 선택해야 한다. 하지만 javascript 에서는 특정 자료형 대신 var 라는 공통된 자료형을 사용한다. 문자열, 정수, 실수, 배열, 클래스 등을 담을 수 있다. 이런 특징으로 보아 단순히 비어있다는 의미의 null 보다는 아직 정의되지 않았다는 의미로 undefined로 출력되는 것 같다. 이 부분에 대해서는 확실하게 알게되면 추후 업데이트 할 것이다.② box = 100; =&gt; 100 비어있던 변수 box에 100 이라는 숫자형/정수형 데이터가 대입됐다. 미정이던 변수형이 지정됨과 동시에 100이라는 값이 저장된 것이다.③ box = 30; =&gt; 30 100 이라는 값이 저장된 변수 box에 30 이라는 값이 저장됐다. 기존에 저장돼 있던 값 100은 삭제되고, 다시 null 상태가 된 자리에 30 이라는 값이 새롭게 저장되는 것이다. 각각의 변수가 차지하는 메모리 공간은 지정돼 있기 때문에 배열이나 구조체를 사용하지 않는 이상 하나의 변수에는 하나의 값만 저장된다. 2. 변수에 저장할 수 있는 자료형(Data Type) 문자형(String), 숫자형(Number), 논리형(Boolean), 빈 데이터(Undefined) 문자형(String) 문자나 숫자 를 큰따옴표(“ “) 또는 작은따옴표(‘ ‘) 로 감싼 형태 HTML 태그를 포함하여 출력할 경우 태그로 인식 문자형 데이터 기본형123&lt;script&gt; var 변수 = \"사용할 문자나 숫자\";&lt;/script&gt; 문자형 변수 출력1234567891011&lt;script&gt; var s = \"javascript\"; var num = \"100\"; var tag = \"&lt;h1&gt; String &lt;/h1&gt;\"; var img = '&lt;img src=\"images/chrome.png\"&gt;'; document.write(s + \" \"); document.write(num + \"&lt;br&gt;\"); document.write(tag + \"\\n\"); document.write(img); &lt;/script&gt; html 태그는 인식된다는 말에 img 태그로 이미지도 출력해봤다. 정상적으로 출력되는 걸 확인할 수 있었다. 이미 알고 있던 내용인데 자주 사용하지 않으니 잊고 있었다.. 복습의 중요성ㅠㅠ 숫자형(Number) 단어 의미 그대로 숫자 를 의미 “100”과 같이 큰따옴표가 숫자를 감싸고 있다면 문자형 데이터 Number(“100”) 형태로 문자형 데이터를 숫자형으로 변경 가능 Java의 Integer.parseInt(“100”); 과 같은 기능 숫자형 데이터 기본형1234&lt;script&gt; var 변수 = 숫자; var 변수 = Number(\"문자형 숫자\");&lt;/script&gt; 숫자형 변수 출력123456789101112131415&lt;script&gt; var number1 = 100; var string = \"500\"; var number2_string = Number(string); var number3 = Number(\"500\"); document.write(\"number1 값 : \" + number1 + \"&lt;br&gt;\" + \"number1 변수형: \" + typeof(number1) + \"&lt;br&gt;\" + \"string 값 : \" + string + \"&lt;br&gt;\" + \"string 변수형: \" + typeof(string) + \"&lt;br&gt;\" + \"number2_string 값 : \" + number2_string + \"&lt;br&gt;\" + \"number2_string 변수형: \" + typeof(number2_string) + \"&lt;br&gt;\" + \"number3 값 : \" + number3 + \"&lt;br&gt;\" + \"number3 변수형: \" + typeof(number3) + \"&lt;br&gt;\"); &lt;/script&gt; typeof() 메서드를 이용해 자료형을 확인해봤다. 문자열이 저장돼 있던 변수 string의 자료형이 Number() 메서드를 통해 string에서 number로 바뀌는 것을 확인할 수 있었다. 논리형(Boolean) true(참) 또는 false(거짓) 만 저장 가능 2개 의 데이터를 비교 할 때 나오는 결과 ‘100보다 10이 크다’는 잘못된 비교이므로 false 반환 논리형 데이터 기본형1234&lt;script&gt; var 변수 = true or false; var 변수 = Boolean(데이터);&lt;/script&gt; 논리형 변수 출력12345678910111213&lt;script&gt; var boolean1 = true; var boolean2 = 10 &gt;= 100; var _string = Boolean(\"hello\"); var _null = Boolean(null); var _int = Boolean(10); document.write(\"boolean1 값 : \" + boolean1 + \"&lt;br&gt;\" + \"boolean2 값 : \" + boolean2 + \"&lt;br&gt;\" + \"_string 값 : \" + _string + \"&lt;br&gt;\" + \"_null 값 : \" + _null + \"&lt;br&gt;\" + \"_int 값 : \" + _int + \"&lt;br&gt;\"); &lt;/script&gt; Boolean() 메서드가 잘 이해되지 않는다. 책에서는 데이터를 매개변수로 대입한다고 했는데 예제에서 문자열을 대입했다.문자열 “hello” =&gt; true숫자형 10 =&gt; truenull =&gt; false왜 이런 결과가 나오는걸까? 비어있는 값이기 때문에 true / false를 판단할 수 없어 false인 걸까? 그렇다면 “hello”와 10은 왜 true인 걸까? 자료형이 확실해서? 궁금하다… 추가 공부 후 업데이트 하자! 이유는 생각보다 간단했다. 이 또한 javascript 문법의 일부였다. 그리고 바로 다음 페이지에 있었다..Boolean() 메서드는 숫자 0, null, undefined, 빈 문자(“”) 를 제외한 모든 데이터에 true를 반환한다고 한다. 추가 테스트를 해 봤다. 1234567891011&lt;script&gt; var _0 = Boolean(0); var _null = Boolean(null); var _undefined = Boolean(undefined); var _nothing = Boolean(\"\"); document.write(\"_0 값 : \" + _0 + \"&lt;br&gt;\" + \"_null 값 : \" + _null + \"&lt;br&gt;\" + \"_undefined 값 : \" + _undefined + \"&lt;br&gt;\" + \"_nothing 값 : \" + _nothing + \"&lt;br&gt;\");&lt;/script&gt; null &amp; undefined 데이터 undefined 변수에 값이 등록되기 전의 기본값 null 변수에 저장된 값이 null인 경우 변수에 저장된 데이터를 비우고자 할 때 사용하는 값 null과 undefined 비교 출력12345678910111213141516171819 &lt;script&gt; var var1; var var2 = \"Hello\"; document.write(\"var1 : \" + var1 + \"&lt;br&gt;\"); document.write(\"var2 : \" + var2 + \"&lt;br&gt;\"); var2 = null; document.write(\"var2 : \" + var2); &lt;/script&gt; ``` ![[그림6] null과 undefined 변수 출력 결과](https://user-images.githubusercontent.com/24776203/46029377-37957c00-c12e-11e8-8b76-4b5d96b42811.png)&lt;br&gt; - &lt;backDeepViolet&gt;typeof&lt;/backDeepViolet&gt; - 지정한 데이터 또는 변수에 저장된 자료형 확인 ```html typeof 기본형 &lt;script&gt; typeof 변수; typeof 데이터; &lt;/script&gt; 변수 자료형 출력1234567&lt;Script&gt; var num = 100; var str = \"자바스크립트\"; document.write(\"변수 num 자료형 : \" + typeof num + \"&lt;br&gt;\"); document.write(\"변수 str 자료형 : \" + typeof str + \"&lt;br&gt;\"); document.write(\"데이터 true 자료형 : \" + typeof true);&lt;/script&gt; 3. 변수 선언 시 주의 사항 변수의 첫 글자 로는 영문자ㅡ $, _(언더바) 만 가능 var 1num = 10; (X) var $num = 10; (O) 변수의 첫 글자 다음 은 영문자, 숫자, $, _(언더바) 만 가능 var 100num = 10; (X) var num100 = 10; (O) 변수명 으로 예약어 사용 불가 예약어 이미 자바스크립트에서 사용중인 단어 document, location, window 등 var document = 10; (X) var num = 10; (O) 변수명 작명 시, 의미부여 var num = “hello”; (X) var num = 10; (O) 변수명 작명 시, 대소문자 구분 var num = 10; document.write(Num); (X) var num = 10; document.write(num); (X) 코드를 실행할 때 이상한 점이 있다.document.write() 메서드에서 줄바꿈(“\\n”)이 적용되질 않는다.alert()에 테스트 했을 때는 또 잘 된다.혹시나 write()는 한줄 작성만 되는 건가 하는 생각에 구글링 해봤지만 역시나 헛생각이었다..대체 왜 안되는거지?!Visual Studio Code의 문제인지, Chrome이 문제인지 몇가지 테스트를 더 해봐야 할 것 같다.다행인 건 태그는 먹는다는 점이다.문제를 해결하기 전 까지 실행 결과는 alert()으로 출력하고 이미지 등 특별한 경우에는 write()를 쓸 예정이다. 개행문자가 적용되지 않아도 크게 문제는 없다. 단지 가독성을 높이고 싶은 욕심이랄까. 다음장 : 02-3. 연산자 Github Page에서 글씨에 색깔 넣는 법을 발견했다!!!그 동안 적용하고 싶어서 많이 검색해봤었는데 다들 마크다운 문법에서는 불가능하다고 했다.하지만 간단한 CSS 코드로 가능하다!! 조만간 이 주제로 포스팅해야지ㅎㅎㅎ 빨간색이 되면 보라색도 되고 글자색이 되면 형광펜도 되지","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"변수","slug":"변수","permalink":"http://nayoungkim0918.github.io/tags/변수/"},{"name":"undefined","slug":"undefined","permalink":"http://nayoungkim0918.github.io/tags/undefined/"}]},{"title":"Do it! 02-1. 자바스크립트 기초 문법","slug":"Do-It/Do-It-02-1","date":"2018-09-11T08:59:08.000Z","updated":"2018-09-11T08:59:08.000Z","comments":true,"path":"2018/09/11/Do-It/Do-It-02-1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-02-1/","excerpt":"","text":"02. 자바스크립트 기초 문법 자바스크립트의 기초 문법 선언문, 주석, 변수, 자료형, 연산자 03, 04장, 제이쿼리의 초석 02-1. 자바스크립트 기초 문법1. 자바스크립트 선언문 선언문 자바스크립트 코드를 작성할 영역을 선언하는 것 스크립트 영역 선언문 시작 : 선언문 종료 : 선언문123&lt;script&gt; 자바스크립트 코드;&lt;/script&gt; 선언 영역 head 태그 영역 국내 대부분의 개발자 사용 body 태그 영역 실습 [02_1_statement_test.html] 7행 document : 문서 객체 write() : 문서 출력 메서드, 괄호 안의 문자열 출력02_1statement_test.html123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script&gt; document.write(\"환영합니다\"); &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 2. 자바스크립트 주석 처리 주석 자바스크립트 선언문 안에서 코드가 아닌 설명글 한 줄 주석 : // 한 줄 설명글 여러 줄 주석 : /* 여러 줄 설명글 */주석1234567891011&lt;!-- HTML 소스의 설명글은 이렇게 처리합니다. 한 줄과 여러 줄 동일합니다. --&gt;&lt;script&gt; //한 줄 설명글인 경우 /* 설명글이 여러 줄인 경우 이렇게 처리합니다. */&lt;/script&gt; 3. 내부 스크립트 외부로 분리하기 외부 자바스크립트 연동 코드로 파일 연결 내부에 자바스크립트 작성 마지막에 외부로 분리하는 작업 필요 목적 프로젝트 관리의 원활 손쉽게 소스 찾기 타인에 의한 소스 손상 방지 방법 따로 파일을 만들어 저장 HTML파일과 JS파일을 분리 HTML 내에서 JS파일 연동 1&lt;script src=\"JS 파일 경로\"&gt;&lt;/script&gt; 내부 스크립트 분리하기① JS 파일 생성 js/02_1_example.js1document.write(\"환영합니다\"); ② 새 html 파일 생성 후 JS 파일 연동`html 02_1_import_test.html &lt;!DOCTYPE html&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;외부 자바스크립트 연동&lt;/title&gt; &lt;script src=&quot;js/02_1_example.js&quot;&gt;&lt;/script&gt; ` 4. 코드 입력 시 주의사항 대/소문자 구분하기 날짜 객체 생성 : New date() : (X) 날짜 객체 생성 : new Date() : (O) 코드 한 줄의 끝에는 반드시 세미콜론(;) 마침표 역할 한 줄에 여러 개의 코드를 작성가능 document.write(“hi”) document.write(“bye”) : (X) document.write(“hi”); document.write(“bye”); : (O) 가독성을 위해 코드는 가급적 한 줄에 한 문장만! 큰따옴표(“ “)와 작은따옴표(‘ ‘) 겹침 오류 주의 문자형 데이터 작성 시 큰따옴표 겹침 오류 document.write(“책에 “자바스크립트는 대소문자를 구분해야 합니다”라고 나와 있다.”); 잘된 예 document.write(‘책에 “자바스크립트는 대소문자를 구분해야 합니다”라고 나와 있다.’); document.write(“책에 \\”자바스크립트는 대소문자를 구분해야 합니다\\”라고 나와 있다.”); 괄호 짝 맞추기 소괄호( ), 중괄호{ }, 대괄호[ ] document.write(“welcome!”; : (X) document.wirte(“weilcome”); : (O) &lt;hr&gt; 다음장 : 02-2. 변수&lt;br&gt;","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"주석","slug":"주석","permalink":"http://nayoungkim0918.github.io/tags/주석/"},{"name":"외부 스크립트 연동","slug":"외부-스크립트-연동","permalink":"http://nayoungkim0918.github.io/tags/외부-스크립트-연동/"}]},{"title":"Do it! 01-3. 자바스크립트 맛보기 예제","slug":"Do-It/Do-It-01-3","date":"2018-09-11T05:55:31.000Z","updated":"2018-09-11T05:55:31.000Z","comments":true,"path":"2018/09/11/Do-It/Do-It-01-3/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-01-3/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-3. 자바스크립트 맛보기 예제 맛보기 예제 질의응답 창 사용 키보드로 나이 입력 받은 후 출력 20세 이상이면 “당신은 성인입니다.” 20세 미만이면 “당신은 미성년자입니다.” 1. 자바스크립트로 간단한 실행문 작성하기 [test_example.html] 생성 [Ctrl + N] / 원하는 위치에 마우스 우클릭 [새 파일] [Ctrl + S] 후 [test_example.html] 로 저장 html:5 [Tab] body 에 코드 작성01_03_test_example.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;맛보기 예제&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; var age = prompt(\"당신의 나이는?\", \"0\"); if(age &gt;= 20) &#123; document.write(\"당신은 성인입니다.\"); &#125; else&#123; document.write(\"당신은 미성년자입니다.\"); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Chrome으로 실행 [Alt + B] 질의응답 창 당신의 나이는? 나이 입력 후 [확인] 페이지에 출력 20 이상 : 당신은 성인입니다. 20 미만 : 당신은 미성년자입니다. …다음장 : 02-01. 자바스크립트 기초 문법","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"Do it! 01-2. 개발 환경 준비하기","slug":"Do-It/Do_It-01_2","date":"2018-09-10T18:21:00.000Z","updated":"2018-09-20T17:08:49.135Z","comments":true,"path":"2018/09/11/Do-It/Do_It-01_2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do_It-01_2/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-2. 개발 환경 준비하기1. 크롬 브라우저 설치하고 개발자 도구 살펴보기 Browser Download https://goo.gl/bcamzC [Chrome 다운로드] 클릭 설치 개발자 도구 크롬 브라우저 실행 메뉴 펼침 버튼(Ξ) 클릭 F12 클릭 패널의 기능 패널 기능 Elementes HTML(Elements) 요소에 적용된 스타일(CSS) 체크 Console 자바스크립트 오류 체크, 디버깅(Debugging) Source 브라우저가 자바스크립트 소스를 파싱(Parsing) 해오는 과정 체크, 오류 체크, 디버깅 단어 의미 parsing 저장된 값을 원하는 형식의 값으로 가공해 읽어오는 것 debugging 버그를 검사하고 수정하는 작업 bug(버그) 프로그래머가 잘못 코딩한 프로그램 실행 시 오류(error) 발생 2. 자바스크립트 편집기 설치와 사용법 자바스크립트 편집기(Editor) 윈도우 기본 메모장(notepad)도 사용 가능 단점 가독성 100% 손코딩 쉽고 편한 편집 Edit Plus, Notepad++, Atom, Sublime Text, Brackets, Webstorm, Visual Studio Code Visual Studio Code 설치하기 https://code.visualstudio.com ‘사용권 계약에 동의함’ 항목 체크 후 [다음] 설치 완료 후 [마침] VS Code 실행 확인 레이아웃 기본 환경 구성 View bar, Side bar, Editor Groups, Panel, Status Bar 구성 기능 뷰 바 사이드 바 기능 변경(탐색기, 검색, Git, 디버거, 확장) 사이드 바 프로젝트 작업 동안 기능 바꿔가며 사용 가능 편집기 그룹 소스 편집 영역, 최대 3개까지 창 분할 가능, 동시에 여러 파일 로드 가능 패널 출력, 디버그 정보, 오류, 경고 등의 표시 상태 바 현재 프로젝트와 편집하고 있는 파일의 정보 제공 단어 의미 탐색기 작업 중인 폴더와 파일 관리 검색 문서 안의 내용 검색 Git Git을 이용한 버전 관리 디버거 프로그래밍 오류 디버깅 확장 기능 확장, 확장 기능 목록 표시 화면 색상 변경 [파일 - 기본 설정 - 색 테마] _ ‘Light + (default light)’ 선택 확장 기능 이용해 HTML 문서를 크롬 브라우저에서 바로 열기 실습 파일 저장할 폴더 생성(Workspace) C:\\Visual Studio Code\\visual_studio_code_workspace [뷰 바 - 탐색기] 사이드 바 우클릭 [폴더 열기] 생성한 ‘visual_studio_code_workspace’ 폴더 선택 탐색기에 로드된 폴더 확인 폴더를 탐색기로 드래그 해도 로드 가능 새 HTML 파일 생성 탐색기 폴더에 마우스 포인터 [새 파일] 아이콘 클릭 원하는 위치에 마우스 포인터 후 우클릭 [새 파일] 가능 아이콘 순서대로 새 파일 / 새 폴더 / 새로고침 / 열린 폴더 접기 [ex1_1.html] 생성 [ex1_1.html] 작성 VS Code의 Emmet 기능 사용 에디터의 이점을 활용하자! Emmet : HTML, CSS를 약식으로 표기하여 작성할 수 있는 기능 html:5 [tab] - 대문자 입력시 태그화 됨 12줄의 기본 코드가 자동으로 입력123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 결과 확인 탐색기 폴더에 마우스 포인터 [새 파일] 아이콘 클릭 원하는 위치에 마우스 포인터 후 우클릭 [새 파일] 가능 아이콘 순서대로 새 파일 / 새 폴더 / 새로고침 / 열린 폴더 접기 [ex1_1.html] 생성 body 채우기 기본 12줄 중 10줄에 코드 입력 [Ctrl + S] 로 저장ex1_1.html1239: &lt;body&gt;10: &lt;h1&gt;Welcome My World&lt;/h1&gt;11: &lt;/body&gt; &lt;br&gt; &lt;hr&gt; Chrome으로 HTML 문서 열기가 책에서는 [Ctrl + Alt + O] 라고 했지만, 실제로는 [Alt + B] 였다. 이유는 아직... 하지만 해당 확장 기능의 메뉴얼에도 [Alt + B] 가 나와 았다. &lt;hr&gt; 다음장 : 01-03. 자바스크립트 맛보기 예제&lt;br&gt;","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"chrome","slug":"chrome","permalink":"http://nayoungkim0918.github.io/tags/chrome/"},{"name":"visual studio code","slug":"visual-studio-code","permalink":"http://nayoungkim0918.github.io/tags/visual-studio-code/"}]},{"title":"Hueman 테마를 적용하다","slug":"post-theme-hueman","date":"2018-09-10T17:51:00.000Z","updated":"2018-09-10T20:20:52.066Z","comments":true,"path":"2018/09/11/post-theme-hueman/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/post-theme-hueman/","excerpt":"","text":"","categories":[{"name":"HEXO","slug":"HEXO","permalink":"http://nayoungkim0918.github.io/categories/HEXO/"},{"name":"Setting","slug":"HEXO/Setting","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/"},{"name":"테마","slug":"HEXO/Setting/테마","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/테마/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nayoungkim0918.github.io/tags/hexo/"},{"name":"hueman","slug":"hueman","permalink":"http://nayoungkim0918.github.io/tags/hueman/"},{"name":"theme","slug":"theme","permalink":"http://nayoungkim0918.github.io/tags/theme/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-09-10T16:24:14.093Z","updated":"2018-09-10T20:21:27.524Z","comments":true,"path":"2018/09/11/hello-world/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"HEXO","slug":"HEXO","permalink":"http://nayoungkim0918.github.io/categories/HEXO/"},{"name":"Setting","slug":"HEXO/Setting","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/"},{"name":"퀵스타트","slug":"HEXO/Setting/퀵스타트","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/퀵스타트/"}],"tags":[]},{"title":"GitHub Page로 블로그 시작하기","slug":"GitHubPage-Start","date":"2018-09-07T00:30:00.000Z","updated":"2018-09-10T20:22:03.550Z","comments":true,"path":"2018/09/07/GitHubPage-Start/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/07/GitHubPage-Start/","excerpt":"","text":"예전부터 블로그를 만드는 것에 관심이 있었다.공부내용도 저장하고, 나중에 다시 찾는 것도 검색으로 쉽게 하려고 만들고 싶었는데프로그래밍 공부 블로그로는 깃허브 페이지가 많이 사용되는 것을 보고 한번 개설해봤다.네이버 블로그나 카페를 만드는 정도로 생각했는데 생각보다 어려웠다….ㅠㅠ그냥 page 만들기 이런 버튼이 있을 줄 알았는데jekyll로 테마도 입혀야 했고, 테마를 커스터마이징 해야 했다.첫 포스팅까지 1시간은 더 걸린 것 같다..아직 손 볼 게 많지만 그래도 조금은 다듬어진 페이지를 보니 뿌듯하다 :D이 블로그의 목표는 더도말고 “꾸준히 글 올리기!” 이다.소재는 공부하는 책 내용 정리, 실습 내용, 코드 설명, 에러 기록 등 프로그래밍에 관련된 주제로 하려 한다.관리가 익숙해지면 프로그래밍 외에도 다양한 소재를 추가할 예정이지만,일단은 공부내용을 기록하는 것에 집중하려 한다ㅎㅎ열심히 해봐야지:D","categories":[],"tags":[{"name":"start","slug":"start","permalink":"http://nayoungkim0918.github.io/tags/start/"},{"name":"GitHubPage","slug":"GitHubPage","permalink":"http://nayoungkim0918.github.io/tags/GitHubPage/"},{"name":"Blog","slug":"Blog","permalink":"http://nayoungkim0918.github.io/tags/Blog/"}]},{"title":"Do it! 01-1. 처음 만나는 자바스크립트","slug":"Do-It/Do_It-01_1","date":"2018-09-06T13:20:00.000Z","updated":"2018-09-12T20:06:31.242Z","comments":true,"path":"2018/09/06/Do-It/Do_It-01_1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/06/Do-It/Do_It-01_1/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-2. 처음 만나는 자바스크립트1. 프런트엔드 개발 이해하기 자바스크립트 Front-End 개발 언어 정적인 웹 문서에 동작 부여 현업에서의 프로젝트 개발 순서 개발 의뢰 &gt; 기획안 작성 &gt; UI 시안 &gt; Front-End &gt; Back-End 1단계 : 고객(Client) 사이트 개발 의뢰 2단계 : 개발사 기획안 작성(고객 요구 커스터마이징) 3단계 : 디자이너 기획안을 토대로 UI(User Interface) 디자인 4단계 : 퍼블리셔= 디자인 이미지파일을 이용해 HTML문서 작성, CSS를 이용해 정적인 웹 문서 완성 HTML : Hyper Text Markup Language 정적인 웹 문서 : 사용자(사이트 방문자)가 어떤 동작을 해도 작동하지 않는 문서 5단계 : 백엔드 개발자 HTML문서에 서버 언어(ASP, PHP, JSP 등)를 사용해 보이지 않는 영역 개발 보이지 않는 영역 : 사용자 입력 데이터를 DB에 저장하거나 검사 2. 자바스크립트의 이해__ 자바스크립트의 탄생 배경 최초의 자바스크립트 회사명 : 넷스케이프(1995년 인터넷 브라우저 최고 점유율. 내비게이터_Navigater) 개발자 : 브렌든 아이크(Brendan Eich, 1961 ~) 개발명 : 모카(Mocha) 첫번째 이름 변경 라이브스크립트(LiveScript) 두번쨰 이름 변경 합병 : 넷스케이프 + 썬마이크로 시스템즈(Sun Microsystems, 현재 오라클과 합병, JAVA로 유명) 자바스크립트(javascript) 지켜지지 않은 언어의 표준화 원인 : 여러 개발 회사가 각자 다른 이름으로 스크립트 언어 개발 마이크로소프트(Microsoft) : JScript + IE 3.0 때문에 IE 8 이하, 크롬, 사파리, 파이어폭스 등에서는 자바스크립트가 호환되지 않음 자바스크립트의 표준화 넷스케이프의 표준화 요청 국제 정보통시표준화기구(ECMA, European Computer Manufacture Association) 1996년 11월 : ECMA-262 표준 명세 제작 1997년 7월 : ECMA 1 버전 완성 ES1(ECMA-262 1st edition) ES6(ECMA-262 6th edition) : 현재 사용 중 일부 브라우저는 ES5의 기능만 지원 : ES6를 사용한다면 브라우저 지원 여부 체크 필수 자바스크립트로 할 수 있는 것 과거 사용자(Client) 컴퓨터에서만 동작하는 언어 HTML5 내장 API의 언어 : API 사용에 필수 내장 API : Geolocation, Canvas, Drag&amp;Drop 등 현재 : 서버(Server)에서도 작동, 다양한 UI 개발에 사용 자바스크립트로 제작한 라이브러리 등장 라이브러리 : 제이쿼리(Jquery), 앵귤러(Angular)JS, 리액트(React)JS, 노드(Node)Js, 폰갭(PhoneGap) UI 개발 사이트, 모바일 웹, 스마트TV 우선 러프하게 책 내용을 정리해봤다.내용을 좀 더 수정하고, 이미지도 추가할 생각이다.첫 장을 읽으면서 느낀 점은, 정말 기본에 충실한 책인 것 같다는 점이다.자바스크립트가 무엇인지 알려주기 위해서프로젝트 개발 순서, 프런트엔드의 개념, 웹페이지가 동작하는 기본 원리까지 설명하는 점이 참 좋았다.이미 알고 있던 내용이 대부분이긴 하지만, 시작이 이렇다면 아직 미숙한 뒷부분도 손쉽게 이해할 수 있을 것 같다:D다음장 : 01-02.개발환경 준비하기Chrome, Visual Studio Code 설치 및 자바스크립트 맛보기","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"}]},{"title":"Do it! 자바스크립트+제이쿼리 입문","slug":"Do-It/Do_It_js_jq-start","date":"2018-09-06T11:33:00.000Z","updated":"2018-09-12T19:18:17.993Z","comments":true,"path":"2018/09/06/Do-It/Do_It_js_jq-start/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/06/Do-It/Do_It_js_jq-start/","excerpt":"","text":"새로운 책을 구매했다.서점에 갈 때 마다 유독 눈에 띄던 Do it! 시리즈.내용도 알차고 기초개념부터 다양한 실습까지 할 수 있어서 javascript와 jqeury를 복습할 겸 구매했다.블로그 개설 후 공부하는 첫번째 책이니만큼 루즈해지지 않고 열심히 공부해야겠다! [1] 기초부터 시작하는 자바스크립트 01. 자바스크립트 시작하기 01-1. 처음 만나는 자바스크립트 01-2. 개발 환경 준비하기 01-3. 자바스크립트 맛보기 예제 02. 자바스크립트 기초 문법 02-1. 자바스크립트 기초 문법 https:// 02-2. 변수 https:// 02-3. 연산자 https:// 03. 제어문 03-1. 제어문이란? https:// 03-2. 조건문 https:// 03-3. 선택문 https:// 03-4. 반복문 https:// 04. 객체 04-1. 객체 https:// 04-2. 내장 객체 https:// 04-3. 브라우저 객체 모델 https:// 05. 함수 05-1. 함수 https:// 05-2. 함수에서 return 문의 역할 https:// 05-3. 함수 스코프 개념 이해 https:// 05-4. 객체 생성자 함수의 활용 https:// 05-5. 자바스크립트 내장 함수 https:// [2] 자바스크립트를 더 쉽게 해주는 제이쿼리 06. 제이쿼리 문서 객체 선택자와 조작법 06-1. 제이쿼리 기본 다지기 https:// 06-2. 선택자 https:// 06-3. 제이쿼리 탐색 선택자 https:// 06-4. 객체 조작 https:// 07. 제이쿼리 이벤트 07-1. 이벤트 등록 메서드 https:// 07-2. 그룹 이벤트 등록 및 삭제하기 https:// 08. 다양한 효과와 애니메이션 08-1. 효과 및 애니메이션 메서드 https:// 08-2. 애니메이션 효과 제어 메서드 https:// 09. 제이쿼리 비동기 방식 연동 09-1. Ajax https:// 09-2. Ajax 관련 메서드 https:// 10. 제이쿼리 플러그인 10-1. 제이쿼리 플러그인이란? https:// 10-2. 제이쿼리 UI 플러그인 활용하기 https:// 10-3. bxSlider 플러그인 활용하기 https:// 10-4. jquery-cookie 플러그인 활용하기 https:// 10-5. 플러그인 직접 제작하기 https:// [3] 자바스크립트 + 제이쿼리 실무 예제 11. 반응형 웹 UI 만들기 11-1. 프로젝트 구성과 HTML 문서 설계하기 https:// 11-2. 공통 UI 만들기 https:// 11-3. 메인 콘텐츠 영역 UI 만들기 https:// 스페셜. 크롬 브라우저로 디버깅하기 콘솔 패널을 이용한 디버깅 소스 패널을 이용한 디버깅 소스 패널의 중단점을 이용한 디버깅 소스 패널의 중단점과 Watch를 이용한 변수 체크","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"start","slug":"start","permalink":"http://nayoungkim0918.github.io/tags/start/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"jquery","slug":"jquery","permalink":"http://nayoungkim0918.github.io/tags/jquery/"},{"name":"DoIt시리즈","slug":"DoIt시리즈","permalink":"http://nayoungkim0918.github.io/tags/DoIt시리즈/"},{"name":"DoIt!_자바스크립트+제이쿼리입문","slug":"DoIt-자바스크립트-제이쿼리입문","permalink":"http://nayoungkim0918.github.io/tags/DoIt-자바스크립트-제이쿼리입문/"},{"name":"출판","slug":"출판","permalink":"http://nayoungkim0918.github.io/tags/출판/"},{"name":"이지스퍼블리싱","slug":"이지스퍼블리싱","permalink":"http://nayoungkim0918.github.io/tags/이지스퍼블리싱/"},{"name":"저자","slug":"저자","permalink":"http://nayoungkim0918.github.io/tags/저자/"},{"name":"정인용","slug":"정인용","permalink":"http://nayoungkim0918.github.io/tags/정인용/"}]}]}