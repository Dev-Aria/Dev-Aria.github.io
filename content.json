{"meta":{"title":"Eunoia Blog","subtitle":"Study & Programming for Web Programmer","description":null,"author":"Nayoung kim","url":"http://nayoungkim0918.github.io"},"pages":[{"title":"All categories","date":"2018-09-10T17:50:09.000Z","updated":"2018-09-10T17:50:36.944Z","comments":true,"path":"categories/index.html","permalink":"http://nayoungkim0918.github.io/categories/index.html","excerpt":"","text":""},{"title":"All tags","date":"2018-09-10T17:49:21.000Z","updated":"2018-09-10T17:49:52.368Z","comments":true,"path":"tags/index.html","permalink":"http://nayoungkim0918.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"[Follow Me!][HTML] 02-2. 제목 달기와 단락으로 묶기","slug":"FolllowMe/FM-JWP-02-2","date":"2018-10-21T19:44:56.000Z","updated":"2018-10-21T19:44:56.000Z","comments":true,"path":"2018/10/22/FolllowMe/FM-JWP-02-2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/22/FolllowMe/FM-JWP-02-2/","excerpt":"","text":"02. 웹 페이지의 기본 뼈대 HTML0. 개념1. HTML의 기본2. 제목 달기와 단락으로 묶기3. 스타일4. 페이지 이동과 이미지 출력, 리스트 출력5. 테이블6. 양식 02-3. 제목 달기와 단락으로 묶기 제목 달기, 단락 구분 태그 배우기 1. br/ 태그 개행 줄 바꿈, 줄 띄우기 body 태그에 텍스트를 여러 줄로 작성하는 경우 여는 태그와 닫는 태그 구분 없이 br/ 태그 하나만 사용 태그 1개 당 Enter 1개 HTML br/ 샘플 코드 02_2_html_br.html123456789101112131415161718&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Tilte 제목&lt;/title&gt; &lt;/head&gt; &lt;body&gt; aaa &lt;!-- 줄바꿈 해당 없음 --&gt; bbb &lt;!-- 줄바꿈 해당 없음 --&gt; ccc &lt;!-- 줄바꿈 해당 없음 --&gt; &lt;!-- 줄바꿈 해당 없음 --&gt; aaa&lt;br/&gt; &lt;!-- 줄바꿈 1회 --&gt; bbb&lt;br/&gt;&lt;br/&gt; &lt;!-- 줄바꿈 2회 --&gt; ccc&lt;br/&gt; &lt;!-- 줄바꿈 1회 --&gt; &lt;/body&gt;&lt;/html&gt; 2. h 태그 h1, h2, h3, h4, h5, h6 단락 구분 다른 내용과 분리되도록 태그 안의 내용 출력 자동 추가 : 위에 빈 공백 한 줄 + 뒤에 빈 공간 한 줄 글자 크기 제어 HTML h 태그 샘플 코드 02_2_html_h.html123456789101112131415161718192021222324&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;h 태그 샘플 코드&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 일반 텍스트 일반 텍스트 &lt;br/&gt; &lt;h1&gt; h1 텍스트 &lt;/h1&gt; 일반 텍스트 &lt;h2&gt; h2 텍스트 &lt;/h2&gt; &lt;h3&gt; h3 텍스트 &lt;/h3&gt; &lt;h4&gt; h4 텍스트 &lt;/h4&gt; &lt;h5&gt; h5 텍스트 &lt;/h5&gt; &lt;h6&gt; h6 텍스트 &lt;/h6&gt; &lt;h7&gt; h7 텍스트 &lt;/h7&gt; &lt;/body&gt;&lt;/html&gt; 3. hr 태그 수평선 특정 라인 강조 경계 구분 HTML hr/ 태그 샘플 코드 02_2_html_hr.html1234567891011121314&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;hr/ 태그 샘플 코드&lt;/title&gt; &lt;/head&gt; &lt;body&gt; aaa&lt;hr/&gt; bbb&lt;br/&gt; ccc&lt;br/&gt; ddd&lt;hr/&gt;&lt;hr/&gt; &lt;/body&gt;&lt;/html&gt; 4. p 태그 단락 구분 태그의 내용 앞에 빈 줄 하나 추가 뒤에 빈 줄 하나 추가 줄 바꿈은 br 태그 활용 HTML p 태그 샘플 코드 02_2_html_p.html1234567891011121314151617181920&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;p 태그 샘플 코드&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 제목 &lt;p&gt; aaa bbb &lt;/p&gt; &lt;p&gt; ccc&lt;/br&gt; ddd &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 다음 포스트 : 02-3. 스타일","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Follow Me","slug":"Book/Follow-Me","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/"},{"name":"Java Web Programming","slug":"Book/Follow-Me/Java-Web-Programming","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/Java-Web-Programming/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://nayoungkim0918.github.io/tags/Java/"},{"name":"Web Programming","slug":"Web-Programming","permalink":"http://nayoungkim0918.github.io/tags/Web-Programming/"},{"name":"Follow Me","slug":"Follow-Me","permalink":"http://nayoungkim0918.github.io/tags/Follow-Me/"},{"name":"HTML","slug":"HTML","permalink":"http://nayoungkim0918.github.io/tags/HTML/"}]},{"title":"[Follow Me!][HTML] 02-1. HTML의 기본","slug":"FolllowMe/FM-JWP-02-1","date":"2018-10-21T07:52:10.000Z","updated":"2018-10-21T07:52:10.000Z","comments":true,"path":"2018/10/21/FolllowMe/FM-JWP-02-1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/21/FolllowMe/FM-JWP-02-1/","excerpt":"","text":"02. 웹 페이지의 기본 뼈대 HTML0. 개념1. HTML의 기본2. 제목 달기와 단락으로 묶기3. 스타일4. 페이지 이동과 이미지 출력, 리스트 출력5. 테이블6. 양식 02-0. 개념 웹 브라우저 언어 서버로부터 받은 웹페이지는 클라이언트 컴퓨터의 웹 브라우저에 의해서 컴파일 되고 실행된다. 서버는 클라이언트의 웹 브라우저가 이해할 수 있는 언어로 작성된 웹 페이지를 보내야 한다. 웹 브라우저가 이해할 수 있는 언어 HTML, CSS, Javascript, Ajax, JQuery 등 뷰 페이지 서버 페이지 = 클라이언트 요청 처리하는 것 뷰 페이지 = 처리한 결과를 사용자에게 보여주는 것 HTML, CSS, Javascript 스크립트 언어 컴파일한 결과를 저장하지 않고 웹 브라우저에 의해서 한 줄씩 컴파일한 뒤 바로 실행하는 형태로 동작 소스코드를 작성하고 저장할 편집기와 실행할 웹 브라우저만 있으면 웹 페이지 작성 및 실행 가능 HTML(정적) 웹 페이지의 기본 뼈대 웹 브라우저에 텍스트와 이미지 출력 다른 페이지로 이동 폼이나 테이블 화면에 그리기 정적인 페이지 작성만 가능 CSS(정적) HTML로 작성된 페이지를 예쁘게 꾸미기 정적인 페이지 작성만 가능 Javascript(동적) 동적인 페이지 작성 가능 버튼 클릭시 이벤트 동작 02-1. HTML의 기본 HTML(Hyper Text Markup Language) 웹 페이지를 정의하는 마크업(Markup) 언어 확장자: .html / . htm 메모장에서도 작업 가능 태그(Tag) 명령어로 구성 태그별 속성으로 세부 설정 가능 Tag(태그) &lt;여는 태그&gt; + &lt;/닫는 태그&gt; 항상 두 개가 하나의 셋트 양쪽 태그명 동일 닫는 태그만 태그명 앞 / 대소문자 구분 X html = HTML = Html 태그 구성 태그명 태그명 + 속성 + … + 속성 태그명 이름별 다른 기능 태그속성 기능별 세부 설정 속성 값 묶기 표준 “속성“ , ‘속성‘ 태그별로 제공되는 속성의 다양성 태그범위 &lt;여는 태그&gt; 적용 범위 &lt;/닫는 태그&gt; 여는 태그의 앞이나 닫는 태그의 뒤의 내용에는 미적용 HTML Tag(태그) 기본형 02_1_html_tag.html123&lt;태그명&gt; 내용 &lt;/태그명&gt;&lt;태그명 속성 = \"값\"&gt; 내용 &lt;/태그명&gt;&lt;태그명 속성1 = \"값\" 속성2 = '값'&gt; 내용 &lt;/태그명&gt; HTML 샘플 코드02_1_html_sample.html123456789101112131415&lt;!DOCTYPE html&gt; &lt;!-- 도큐먼트 종류 지정 - 웹 브라우저가 페이지를 올바르게 실행 가능하게 하는 기능 --&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;!-- 웹 페이지에 출력될 테스트의 인코딩 설정 --&gt; &lt;title&gt;Tilte 제목&lt;/title&gt; &lt;!-- 윈도우 창의 타이틀 바에 출력될 제목 --&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 웹 페이지의 실제 내용, 웹 페이지를 꾸밀 내용--&gt; 내용 &lt;!-- 주석 내용 --&gt; &lt;/body&gt;&lt;/html&gt; 실행화면 확인 Editor 실행 메모장, 워드패드. Atom, Visual Studio Code, Editplus 등 html 코드 작성(인코딩 지정) 확장자를 html로 하여 원하는 폴더에 저장 저장된 파일(웹 브라우저 아이콘) 실행(더블 클릭) 웹 브라우저에서 실행된 html 파일 확인 다음 포스트 : 02-2. 제목 달기와 단락으로 묶기","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Follow Me","slug":"Book/Follow-Me","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/"},{"name":"Java Web Programming","slug":"Book/Follow-Me/Java-Web-Programming","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/Java-Web-Programming/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://nayoungkim0918.github.io/tags/Java/"},{"name":"Web Programming","slug":"Web-Programming","permalink":"http://nayoungkim0918.github.io/tags/Web-Programming/"},{"name":"Follow Me","slug":"Follow-Me","permalink":"http://nayoungkim0918.github.io/tags/Follow-Me/"},{"name":"HTML","slug":"HTML","permalink":"http://nayoungkim0918.github.io/tags/HTML/"}]},{"title":"[Follow Me!] 01. 웹 프로그램의 개요","slug":"FolllowMe/FM-JWP-01","date":"2018-10-20T08:09:53.000Z","updated":"2018-10-20T08:09:53.000Z","comments":true,"path":"2018/10/20/FolllowMe/FM-JWP-01/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/20/FolllowMe/FM-JWP-01/","excerpt":"","text":"01. 웹 프로그램의 개요1. 웹 어플리케이션이란 무엇인가?2. 자바 기반의 웹 어플리케이션은 무엇이 다른가?3. 웹 어플리케이션의 구조 및 동작 원리는 무엇인가? 1. 웹 어플리케이션이란 무엇인가? 웹(Web) 네트워크의 한 종류 HTTP 프로토콜 통신 EX 미국의 웹 사이트 내용을 웹 브라우저를 통해 볼 수 있는 이유 요청한 페이지를 미국의 웹 서버로부터 HTTP 통신을 통해 전달받기 때문 관련 기술 웹 서버 구축 및 운영, 프로토콜 정책 관리, 인프라 구축 등 웹 프로그램 = 웹 어플리케이션 웹(Web) 기반의 응용 소프트웨어를 의미하는 용어 웹 환경에서 이용할 수 있는 다양한 기능을 제공하는 프로그램 게시판, SNS, 인터넷 쇼핑몰 등 단독으로 정상적인 실행 가능 다른 어플리케이션과의 결합으로 프로그램 규모 확장 가능 클라이언트(Client)의 요청과 서버(Server)의 응답으로 구성 클라이언트가 웹 브라우저의 주소 창에 원하는 웹 페이지의 URL 작성 후 [이동] 버튼 클릭 URL에 작성된 주소로 요청 전달 요청을 받은 웹 서버 안의 웹 어플리케이션에서 요청된 페이지 생성 클라이언트에 응답(요청된 페이지) 전송 URL 주소를 입력하고 [Enter] 키를 눌렀을 때의 내부 동작 웹 서버의 URL = 웹 어플리케이션의 접근 경로 각 어플리케이션의 구분 = 어플리케이션 마다 다른 경로 추가 가능 하나의 웹 서버에는 여러 개의 웹 어플리케이션을 올릴 수 있음 웹 어플리케이션에 요청 전송 “URL주소/웹 어플리케이션 이름/요청할 페이지 경로” URL “http:// www. myserver. com” | 웹 어플리케이션 “app1” | 요청할 페이지 경로 “index.jsp” “http://www.myserver.com/app1/index.jsp&quot; 요청 받은 서버는 클라이언트가 원하는 페이지를 생성해 응답으로 보내준다. 클라이언트 컴퓨터는 응답으로 받은 페이지를 웹 브라우저에 띄워준다. 2. 자바 기반의 웹 어플리케이션은 무엇이 다른가? 웹 어플리케이션 구현 언어 ASP, PHP, JSP &amp; Servlet 등 스크립트 기반의 웹 어플리케이션 웹 서비스 초창기에 사용 CGI 스크립트언어 인터프리터 방식으로 실행 컴파일 결과를 저장하지 않고 실행할 때마다 새로 컴파일 동시 접속이 많아 과부하 발생 자바 기반의 웹 어플리케이션 웹(Web), 모바일(Mobile)에서 많이 활용 Java 컴파일 방식으로 실행 소스가 변경되지 않는 한 컴파일은 한번만 실행 요청이 발ㄹ생할 때마다 컴파일된 결과 사용 플랫폼에 독립적(JVM) 동일한 코드는 운영 체제가 바뀌어 동일 동작 네트워크로 연결된 다양한 종류의 디바이스에서 동일하게 동작 인터프리터(Interpreter) VS 컴파일러(Compiler) 3. 웹 어플리케이션의 구조 및 동작 원리는 무엇인가? 웹 어플리케이션의 동작 요청과 응답 클라이언트가 웹 어플리케이션에 요청을 보내는 방법 주소가 나타내는 페이지 요청 = 웹 브라우저에 주소를 작성해 [이동] 버튼을 클릭하는 것 로그인 처리 요청 = 로그인 폼에 아이디와 비밀번호를 입력하고, [로그인] 버튼을 클릭하는 것 로그인 처리 클라이언트가 로그인 폼에 아이디와 비밀번호 입력 [로그인] 버튼 클릭 = 로그인 요청을 웹 어플리케이션으로 전달 (아이디, 비밀번호) 함께 전달 로그인 성공 여부 확인 = 전달받은 폼 데이터와 DB에 저장된 정보를 비교 클라이언트한테 결과를 응답 페이지로 전송 클라이언트와 서버로 분리된 작업 클라이언트 사이드(Client-Side) 사용자의 입력 받기 서버 쪽에서 처리한 결과를 사용자에게 보여주기 뷰 페이지(View Page) 구현 - HTML, CSS, Javascript, JSP 서버 사이드(Server-Side) 전달 받은 요청을 데이터베이스(DB)와 연동해 처리 서블릿(Servlet) - 클라이언트의 요청을 받아 흐름을 제어하는 부분 자바(JAVA) - 기능 구현 및 DB 처리 구현 Plus+. 자바(Java)란 무엇인가? 객체 지향적 프로그래밍 언어 썬 마이크로시스템즈의 제임스 고슬링(James Gosling)과 연구원들의 개발 독립적인 플랫폼(UNIX 기반 C언어와의 차이점) 분산형 컴퓨팅 및 통신 환경에 알맞은 응용 프로그램 개발에 적합 초기(가전제품 동작 프로그램) 현재(웹 어플리케이션, 모바일 기기용 소프트웨어) 다음 포스트 : 02-1. HTML의 기본","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Follow Me","slug":"Book/Follow-Me","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/"},{"name":"Java Web Programming","slug":"Book/Follow-Me/Java-Web-Programming","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/Java-Web-Programming/"}],"tags":[{"name":"Java","slug":"Java","permalink":"http://nayoungkim0918.github.io/tags/Java/"},{"name":"Web Programming","slug":"Web-Programming","permalink":"http://nayoungkim0918.github.io/tags/Web-Programming/"},{"name":"Follow Me","slug":"Follow-Me","permalink":"http://nayoungkim0918.github.io/tags/Follow-Me/"}]},{"title":"[Follow Me!] 초급.중급자를 위한 Java Web Programming","slug":"FolllowMe/FM-JWP-00-Start","date":"2018-10-19T08:38:19.000Z","updated":"2018-10-19T08:38:19.000Z","comments":true,"path":"2018/10/19/FolllowMe/FM-JWP-00-Start/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/19/FolllowMe/FM-JWP-00-Start/","excerpt":"","text":"스터디 모임에서 각자 다른 공부를 하다보니 막상 모이면 루즈해지는 감이 없잖아 있었다.결국 다들 같은 주제로 공부할 게 필요하다는 생각에 서점에서 새로운 책을 구매하게 됐다. 주제를 Spring으로 정하고 사당역 반디앤 루니스에 갔는데 책이 없어도 너무 없었다ㅠㅠ결국 그 다음 스터디 때 강남 교보문고에서 모여 새 책을 정했다.지난번에 [Spring Quit Start] 로 Spring Framework의 이론적인 부분을 공부했기 때문에 이번에는 frontend 부터 backend 까지 웹 개발의 전반적인 부분을 실습과 함께 공부할 수 있는 책을 구매했다. 국비학원을 다니며 다 배웠던 내용이긴 하지만, 다시 정리한다는 마음으로 처음부터 차근차근 해보려고 한다. 지금 블로그에 올리고 있는 [Do It Javascript + JQuery] 와 같이 공부할 예정이기 때문에 조금 버거울 수도 있지만, 우선 일주일에 최소한 각 1개씩은 올리는 걸 목표로 진행해보려 한다. 목차 01. 웹 프로그램의 개요 01-1. 웹 어플리케이션이란 무엇인가? 01-2. 자바 기반의 웹 어플리케이션은 무엇이 다른가? 01-3. 웹 어플리케이션의 구조 및 동작 원리는 무엇인가? 02. 웹 페이지의 기본 뼈대 HTML 02-1. HTML의 기본 02-2. 제목 달기와 단락으로 묶기 02-3. 스타일 02-4. 페이지 이동과 이미지 출력, 리스트 출력 02-5. 테이블 02-6. 폼 양식 만들기 02-7. 블록 02-8. iframe 03. CSS로 웹 페이지를 예쁘게 꾸미자 03-1. CSS 작성 방법 03-2. 텍스트 제어 03-3. 크기 제어 03-4. 위치 제어 03-5. 배경 제어 03-6. 테두리 제어 04. Javascript로 페이지에 움직임을 붙여넣어라 04-1. 기본 코드 04-2. 기본 문법 04-3. 자바스크립트 출력 04-4. 메시지 박스 04-5. 함수 04-6. 이벤트 처리 04-7. 폼 제어 05. 웹 서버 개발 환경 구축과 자바 웹 어플리케이션의 구조 05-1. 자바 개발 환경 JDK 설치 https:// 05-2. 소스 개발 툴 이클립스(Eclipse) 설치 05-3. 데이터베이스 시스템 오라클(Oracle) 설치 05-4. 웹 컨테이너 톰캣(Tomcat) 설치 05-5. 자바 웹 어플리케이션의 구조와 웹 프로젝트 생성 06. 자바 서블릿(Java Servlet) 06-1. 서블릿 생성 06-2. 서블릿 라이프 사이클 06-3. 서블릿의 요청 파라메터 받기와 응답 생성 06-4. 서블릿의 페이지 이동 06-5. 스코프(Scope) 객체 06-6. forward와 redirect의 차이 07. 서블릿(Servlet)과 MVC 07-1. 테이블 생성하기 07-2. 프로젝트 생성하기 07-3. DB 연결 구현하기 07-4. DTO 구현하기 07-5. DAO 구현하기 07-6. SERVICE 구현하기 07-7. 컨트롤러 구현하기 07-8. 뷰 페이지 구현하기 07-9. 실행 08. 자바 서버 페이지(JSP) 08-1. JSP 파일의 생성과 라이프 사이클 08-2. 디렉티브(Directive) 08-3. JSP 스크립팅(Scripting) 요소 08-4. JSP의 기본 객체 08-5. 정보 공유와 스코프(Scope) 객체 08-6. 페이지 흐름 제어 08-7. 예외 처리 09. 세션과 쿠키로 사용자를 기억하라 09-1. 세션(Session) 09-2. 쿠키(Cookie) 09-3. 세션 트래킹(Session Tracking) 10. 회원관리 프로그램 구현하기 10-1. DB 연결 구현하기 10-2. DTO 구현하기 10-3. DAO 구현하기 10-4. SERVICE 구현하기 10-5. 컨트롤러 구현하기 10-6. 뷰 페이지 구현하기 10-7. 실행 11. 뷰 페이지에서 자바 코드를 빼라(EL &amp; JSTL) 11-1. EL(Expression Language) 11-2. JSTL(JSP Standard Tag Library) 12. 게시판 구현으로 EL과 JSTL 익히기 12-1. 프로젝트 생성하기 12-2. DB 연결과 DTO 구현하기 12-3. DAO 구현하기 12-4. SERVICE 구현하기 12-5. 컨트롤러 구현하기 12-6. 뷰 페이지 구현하기 12-7. 실행 13. 사용자 정의 태그 13-1. 사용자 정의 태그 구현 13-2. 사용자 정의 태그 속성 13-3. 바디(body) 있는 태그 13-4. 사용자 정의 태그의 변수 정의 14. 필터(Filter) 활용 14-1. 필터 구현 14-2. 요청과 응답 변경","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Follow Me","slug":"Book/Follow-Me","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/"},{"name":"Java Web Programming","slug":"Book/Follow-Me/Java-Web-Programming","permalink":"http://nayoungkim0918.github.io/categories/Book/Follow-Me/Java-Web-Programming/"}],"tags":[{"name":"start","slug":"start","permalink":"http://nayoungkim0918.github.io/tags/start/"},{"name":"Java","slug":"Java","permalink":"http://nayoungkim0918.github.io/tags/Java/"},{"name":"Web Programming","slug":"Web-Programming","permalink":"http://nayoungkim0918.github.io/tags/Web-Programming/"},{"name":"Follow Me 시리즈","slug":"Follow-Me-시리즈","permalink":"http://nayoungkim0918.github.io/tags/Follow-Me-시리즈/"},{"name":"Follow Me! 초급.중급자를 위한 Java Web Programming","slug":"Follow-Me-초급-중급자를-위한-Java-Web-Programming","permalink":"http://nayoungkim0918.github.io/tags/Follow-Me-초급-중급자를-위한-Java-Web-Programming/"},{"name":"출판","slug":"출판","permalink":"http://nayoungkim0918.github.io/tags/출판/"},{"name":"아티오-ArtStudio","slug":"아티오-ArtStudio","permalink":"http://nayoungkim0918.github.io/tags/아티오-ArtStudio/"},{"name":"저자","slug":"저자","permalink":"http://nayoungkim0918.github.io/tags/저자/"},{"name":"김유진","slug":"김유진","permalink":"http://nayoungkim0918.github.io/tags/김유진/"}]},{"title":"[Do It!] 04-2. 내장 객체","slug":"Do-It/Do-It-04-2","date":"2018-10-18T13:33:57.000Z","updated":"2018-10-18T13:33:57.000Z","comments":true,"path":"2018/10/18/Do-It/Do-It-04-2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/18/Do-It/Do-It-04-2/","excerpt":"","text":"04. 객체04-1. 객체04-2. 내장 객체04-3. 브라우저 객체 모델04-4. 총정리 실습!04-5. Mission! 04-2. 내장 객체(Built-in Object)1. 내장 객체 생성하기2. 날짜 정보 객체3. 수학 객체4. 배열 객체5. 문자열 객체 내장 객체 내장 객체(Built-in-Object) 브라우저의 자바스클비트 엔진에 내장된 객체 필요한 경우 객체를 생성해 사용 가능 문자(String), 날짜(Date), 배열(Array), 수학(Math), 정규 표현 객체(RegExp Object) 등 1. 내장 객체 생성하기 내장 객체 생성 기본형 반드시 new 라는 키워드와 생성 함수 사용내장 객체 생성 기본형1참조 변수(인스턴스 이름) = new 생성 함수(); 내장 객체 생성 예제 new 키워드와 기본 객체 생성 함수 Object()를 이용해 객체 생성 생성된 객체는 변수 tv가 참조하며, 이를 이용해 객체의 속성과 메서드 생성 변수를 이용해 참조한다 = 생성된 객체를 이용할 때 참조 변수를 사용하겠다는 의미 04_2_builtInObject_ex1_object.html 123456789101112131415161718192021222324var tv = new Object(); //tv 객체 생성tv.color = \"white\"; //객체tv의 속성color에 값white 저장tv.price = 300000; //객체tv의 속성price에 값30000 저장//객체tv에 메서드info() 생성tv.info = function() &#123; document.write(\"tv 색상 : \" + this.color, \"&lt;br&gt;\"); document.write(\"tv 가격 : \" + this.price, \"&lt;br&gt;\");&#125;var car = &#123; color: \"black\", price: 5000000, info:function() &#123; document.write(\"car 색상 : \" + this.color, \"&lt;br&gt;\"); document.write(\"car 가격 : \" + this.price, \"&lt;br&gt;\"); &#125; &#125;;document.write(\"&lt;h1&gt;tv 객체 메서드 호출&lt;/h1&gt;\");tv.info();document.write(\"&lt;h1&gt;car 객체 메서드 호출&lt;/h1&gt;\");car.info(); 2. 날짜 정보 객체 날짜 객체(Date Object) 날짜나 시간 관련 정보를 제공받고 싶을 때 사용 날짜와 관련된 작업을 할 때 유용한 객체 EX 2002년 월드컵 개막일인 2002년 5월 31일이 무슨 요일인지에 대한 정보 가져오기 달력 제작 D-day 계산기 제작 날짜 객체 기본형 현재 날짜의 정보 제공 Date 객체 기본형123참조 변수 = new Date();var t = new Date(); 특정 날짜의 정보 제공 특정 날짜의 Date 객체 기본형12345참조 변수 = new Date(\"연/월/일\");참조 변수 = new Date(연, 월-1, 일);var t = new Date(\"2002/5/31\");var t = new Date(2002,4,31); 현재 날짜부터 특정 날짜까지의 일수 계산 밀리초(1/1000초) 단위로 계산현재 날짜부터 특정 날짜까지의 일수 계산123456남은 일 수(밀리초) = 특정 날짜 객체 - 현재 날짜 객체1초 = 1000(msc)1분(60초) = 1000*60 //60,000(msc)1시간(60분) = 1000*60*60 //3,600,000(msc)1일(60분*24) = 1000*60*60*24 //86,400,000(msc) [표 1] Date 객체의 다양한 메서드 날짜의 정보를 가져오는 메서드와 날짜를 수정하는 메서드로 구분 날짜 정보를 가져올 때(GET) 날짜 정보를 수정할 때(SET) getFullYear() 연도 setFullYear() getMonth() 월(현재 월 - 1) setMonth() getDate() 일 setDate() getDay() 요일(일: 0 ~ 토: 6) setDay() 없음 : 날짜 변경 시 자동 변경 setDay() getHours() 시 setHours() getMinutes() 분 setMinutes() getSeconds() 초 setSeconds() getMilliseconds() 밀리초(1.1000초 단위) setMilliseconds() getTime() 1970년 1월 1일부터 경과된 시간을 밀리초로 표기함 setTime() toGMTString() GMT 표준 표기 방식으로 문자형 데이터로 반환함 toLocaleString() 날짜 객체 예제1 2002년 월드컵 날짜와 관련된 정보 출력 04_2_builtInObject_ex2_date1.html 123456789101112131415161718192021//오늘 날짜 정보 객체 생성var today = new Date();//월, 일, 요일 정보 가져오기var nowMonth = today.getMonth(), nowDate = today.getDate(), nowDay = today.getDay();document.write(\"&lt;h1&gt;오늘 날짜 정보&lt;/h1&gt;\");document.write(\"현재 월 : \" + nowMonth, \"&lt;br&gt;\");document.write(\"현재 일 : \" + nowDate, \"&lt;br&gt;\");document.write(\"현재 요일 : \" + nowDay, \"&lt;br&gt;\");var worldcup = new Date(2002, 4, 31);var theMonth = worldcup.getMonth(), theDate = worldcup.getDate(), theDay = worldcup.getDay();document.write(\"&lt;h1&gt;월드컵 날짜 정보&lt;/h1&gt;\");document.write(\"2002 월드컵 몇 월 : \" + theMonth, \"&lt;br&gt;\");document.write(\"2002 월드컵 몇 일 : \" + theDate, \"&lt;br&gt;\");document.write(\"2002 월드컵 무슨 요일 : \" + theDay, \"&lt;br&gt;\"); 현재 날짜를 출력해 본 결과 [9월 17일 3요일] 이 된다. 현재 날짜는 [10월 17일 수요일] 이므로, 위의 [표 1]처럼 getMonth()는 [현재 월 - 1]의 값을 가져옴을 알 수 있다. 월과 요일을 메서드 정의에 맞게 적용했을 경우, 월드컵 날짜는 [2002년 5월 31일 금요일] 임을 알 수 있다. 날짜 객체 예제2 현재 날짜부터 연말까지 남은 일수 04_2_builtInObject_ex3_date2.html 1234567891011var today = new Date();var nowYear = today.getFullYear();//올해 연말에 대한 날짜 정보 객체 생성var theDate = new Date(nowYear, 11, 31);//남은 날 = 특정 날짜 - 현재 날짜(밀리초 단위)var diffDate = theDate.getTime() - today.getTime();document.write(\"&lt;h1&gt;오늘부터 올해 연말까지 남은 날짜&lt;/h1&gt;\")var result = Math.ceil(diffDate / (60 * 1000 * 60 * 24));document.write(\"연말 D-day : \" + result + \"일 남았습니다.\"); 3. 수학 객체 수학 객체(Math Object) 산술 연산자(+ - * /)로 불가능한 연산 기능 제공 최댓값, 최솟값, 반올림값 등 [표 2] Date 객체의 다양한 메서드 날짜의 정보를 가져오는 메서드와 날짜를 수정하는 메서드로 구분 종류 설명 Math.abs(숫자) 숫자의 절댓값 반환 Math.max(숫자1, 숫자2, 숫자3, 숫자4) 숫자 중 가장 큰 값 반환 Math.min(숫자1, 숫자2, 숫자3, 숫자4) 숫자 중 가장 작은 값 반환 Math.pow(숫자, 제곱값) 숫자의 거듭제곱값 반환 Math.random() 0 ~ 1 사이의 난수 반환 Math.round(숫자) 소숫점 첫째자리에서 반올림해 정수 반환 Math.ceil(숫자) 소숫점 첫째자리에서 무조건 올림해 정수 반환 Math.floor(숫자) 소숫점 첫째자리에서 무조건 내림해 정수 반환 Math.sqrt(숫자) 숫자의 제곱근값 반환 Math.PI 원주율 상수 반환 수학 객체 예제1 Math 객체에 포홤된 메서드에 숫자를 입력해 결괏값 반환 04_2_builtInObject_ex4_math1.html 1234567891011121314151617var num = 2.1234;var maxNum = Math.max(10, 5, 8, 30), //30 최댓값 minNum = Math.min(10, 5, 8, 30), //5 최솟값 roundNum = Math.round(num), //2 소숫점 첫째 자리 반올림 floorNum = Math.floor(num), //2 소숫점 첫째 자리 내림 ceilNum = Math.ceil(num), //3 소숫점 첫째 자리 올림 rndnum = Math.random(), //0~1 0과 1사이의 난수 발생 piNum = Math.PI; //원주율 상수 반환document.write(\"최댓값 : \" + maxNum, \"&lt;br&gt;\");document.write(\"최솟값 : \" + minNum, \"&lt;br&gt;\");document.write(\"반올림 : \" + roundNum, \"&lt;br&gt;\");document.write(\"올림 : \" + floorNum, \"&lt;br&gt;\");document.write(\"내림 : \" + ceilNum, \"&lt;br&gt;\");document.write(\"난수 : \" + rndnum, \"&lt;br&gt;\");document.write(\"원주율 : \" + piNum, \"&lt;br&gt;\"); 지정 구간의 정수 난수 생성 공식 임의로 지정한 숫자의 구간에서 난수를 정수로만 반환받기 Math.random()을 사용해 지정한 숫자 구간에서 난수(임의의 정수) 발생 지정 구간의 정수 난수 생성 공식 구하는 과정 1234567891011//0부터 10까지 실수로 난수 반환Math.random()*10; //0부터 10까지 난수를 발생해 소숫점 값 제거//Math.floor()를 사용해 정수로만 난수 반환//floor()는 값을 내리기 때문에 0이 아닌 11 사용Math.floor(Math.random() * 11); //Math.random()을 이용해 120~150 사이의 난수를 정수로만 발생Math.floor(Math.random() * 31); //0 ~ 30Math.floor(Math.random() * 31) + 120; //120 ~ 150 지정 구간의 정수 난수 생성 공식 Math.floor(Math.random() * (최댓값 - 최솟값 + 1) + 최솟값; 수학 객체 예제2 웹사이트 방문 시 나타나는 창에 방문자가 ‘가위, 바위, 보’를 적어 컴퓨터가 내려는 가위, 바위, 보를 추측해 맞추기 난수 사용 04_2_builtInObject_ex5_math2.html 123456789101112131415161718192021222324252627282930document.write(\"&lt;h3&gt;컴퓨터 가위, 바위, 보 맞추기&lt;/h3&gt;\");var game = prompt(\"가위, 바위, 보 중 선택하세요.\", \"가위\");var gameNum;switch(game) &#123; case \"가위\": gameNum = 1; break; case \"바위\": gameNum = 2; break; case \"보\": gameNum = 3; break; default : alert(\"잘못 작성했습니다.\"); location.reload(); //현재 페이지 새로고침 &#125;// 1 ~ 3 까지의 난수를 생성한 후 변수 com에 저장 var com = Math.ceil(Math.random() * 3);document.write(\"&lt;img src = \\\"images/math_img_\" + com + \".jpg\\\"&gt;\");//gameNum과 com이 일치하는지 비교 후 해당 이미지 출력if(gameNum == com) &#123; document.write(\"&lt;img src = \\\"images/game_1.jpg\\\"&gt;\");&#125; else &#123; document.write(\"&lt;img src = \\\"images/game_2.jpg\\\"&gt;\");&#125; 4. 배열 객체 배열 객체(Array Object) 여러 개의 데이터를 하나의 장소에 저장하는데 사용 배열 = 配列 = 나눌 배, 열거할 열 = 하나의 저장소를 나눠서 데이터를 열거하라 배열 선언 시, 각각의 데이터 는 배열로 나눠진 저장소에 나열 되고, 각각의 저장소 에는 0부터 시작하는 인덱스 번호(번지수) 가 부여됨 배열 객체 기본형 배열 객체 기본형123456789101112131415161718//방식 1var 참조변수 = new Array(); 참조변수[0] = 값1; 참조변수[1] = 값2; 참조변수[2] = 값3; . . . 참조변수[n-1] = 값n;//방식2var 참조변수 = new Array(값1, 값2, 값3, ... 값n);//방식3var 참조변수 = [값1, 값2, 값3, ... 값n];//배열 객체에 저장된 데이터 호출참조변수[인덱스 번호]; 배열 객체 생성 방식 EX 배열 객체 생성 방식1 1234var d = new Array();d[0] = 30;d[1] = \"따르릉\";d[2] = true; 배열 객체 생성 방식2 1var d = new Array(30, \"따르릉\", true); 배열 객체 생성 방식3 1var d = [30, \"따르릉\", true]; [표 3] 배열 객체의 메서드 및 속성 배열의 순서변경, 배열 객체에 새 데이터의 삽입, 삭제 가능 종류 설명 join 배열 객체의 데이터를 연결 문자 기준으로 1개의 문자형 데이터로 반환 reverse() 배열 객체의 데이터 순서를 거꾸로 바꾼 후 반환 sort() 배열 객체의 데이터를 오름차순으로 정렬 slice(index1, index2) 배열 객체의 데이터 중 원하는 인덱스 구간만큼 잘라서 새로운 배열 객체로 가져옴 splice() 배열 객체의 지정 데이터를 삭제하고 그 구간에 새 데이터 삽입 concat() 2개의 배열 객체를 하나로 결합 pop() 배열에 저장된 데이터 중 첫 번째 인덱스에 저장된 데이터 삭제 push(new data) 배열 객체의 마지막 인덱스에 새 데이터 삽입 shift() 배열 객체에 저장된 데이터 중 첫 번째 인덱스에 저장된 데이터 삭제 unshift(new data) 배열 객체의 가장 앞의 인덱스에 새 데이터 삽입 length 배열에 저장된 총 데이터의 갯수 반환 배열 객체 예제1 04_2_builtInObject_ex6_array1.html 12345678910111213141516171819//배열 생성var arr = [30, \"따르릉\", true];//직접 하나씩 호출document.write(\"&lt;h3&gt;배열값 가져오기 - 1&lt;/h3&gt;\");document.write(arr[0], \"&lt;br&gt;\");document.write(arr[1], \"&lt;br&gt;\");document.write(arr[2], \"&lt;br&gt;\");//반복문으로 호출document.write(\"&lt;h3&gt;배열값 가져오기 - 2&lt;/h3&gt;\");for(var i = 0; i &lt; arr.length; i++) &#123; //[0 ~ 배열의크기] 만큼 반복 document.write(arr[i], \"&lt;br&gt;\");&#125;document.write(\"&lt;h3&gt;배열값 가져오기 - 3&lt;/h3&gt;\");for(i in arr) &#123; document.write(arr[i], \"&lt;br&gt;\");&#125; 배열 객체 예제2 join(), concat(), slice(), sort(), reverse()를 사용한 예제 conlol.log(출력할내용) : 브라우저 개발자 도구의 console에 출력 04_2_builtInObject_ex6_array1.html 12345678910111213141516171819202122var arr_subway_2 = [\"사당\", \"교대\", \"방배\", \"강남\"];var arr_subway_3 = [\"신사\", \"압구정\", \"옥수\"];//배열에 저장된 값을 지정한 문자로 연결하여 하나의 문자열 반환var result = arr_subway_2.join(\"-\");console.log(result);//2개의 배열을 하나의 배열로 만들어 반환result = arr_subway_2.concat(arr_subway_3);console.log(result);//배열의 1번 이전의 인덱스 요소를 잘라낸 후, 그 값을 반환result = arr_subway_2.slice(1, 3);console.log(result);//배열의 값을 오름차순으로 정렬arr_subway_2.sort();console.log(arr_subway_2);//배열 순서를 거꾸로 뒤집기arr_subway_3.reverse();console.log(arr_subway_3); 배열 객체 예제3 splice(), pop(), push(), shift(), unshift()를 사용한 예제 04_2_builtInObject_ex8_array3.html 12345678910111213141516171819var greenArr = [\"교대\", \"방배\", \"강남\"];var yellowArr = [\"미금\", \"정자\", \"수서\"];//① 2번 인덱스부터 1개의 데이터 삭제 후, \"서초\", \"역삼\" 삽입greenArr.splice(2, 1, \"서초\", \"역삼\");console.log(greenArr);//② yellowArr 배열 마지막 인덱스의 데이터를 data1에 저장var data1 = yellowArr.pop();//③ yellowArr 배열 가장 앞쪽 인덱스의 데이터를data2에 저장var data2 = yellowArr.shift();//④ data2에 저장된 데이터를 yellowArr 배열의 마지막 인덱스에 삽입yellowArr.push(data2);console.log(yellowArr);//⑤ data1에 저장된 데이터를 yellowArr 배열의 가장 앞쪽 인덱스에 삽입yellowArr.unshift(data1);console.log(yellowArr); 배열 객체 예제3 수행 내용 및 과정 5. 문자열 객체 문자열 객체(String Object) 문자형 데이터를 객체로 취급하는 것 자바스크립트에서 가장 많이 사용 문자와 관련된 메서드 속성 제공 문자에 대해 다양한 정보 추출 가능 EX 문자열 객체에 지정한 문자의 위치 문자열 객체 기본형 new 키워드와 String() 메서드 사용 생성된 객체는 변수에 참조 문자열 객체 기본형1234567//방식 1var 참조변수 = new String(문자형 데이터);var t = String(\"Hello Javascript\"); //문자열 객체 생성//방식 2var 참조변수 = 문자형 데이터var t = \"Hello Javascript\"; //문자열 객체 생성 [표 4] 문자열 객체의 메서드 및 속성 종류 설명 charAt(index) 문자열에서 인덱스 번호에 해당하는 문자 반환 EX var str = “web he she”; str.charAt(2); “b” 반환 indexOf(“찾을 문자”) 문자열 왼쪽부터 일치하는 문자를 찾아 첫번째 인덱스 번호 반환 찾는 문자가 없으면 -1 반환 EX var str = “web he she he”; str.indexOf(“he”); 4 반환 lastIndexOf(“찾을 문자”) 문자열 오른쪽부터 일치하는 문자를 찾아 첫번째 인덱스 번호 반환 찾는 문자가 없으면 null 반환 EX var str = “web he she he”; str.lastIndexOf(“he”); 11 반환 match(“찾을 문자”) 문자열 왼쪽부터 일치하는 문자를 찾아 첫번째 문자 반환 찾는 문자가 없으면 null 반환 EX var str = “web he she he”; str.match(“boy”); null 반환 replace(“바꿀 문자”, “새 문자”) 문자열 왼쪽부터 일치하는 문자를 찾아 첫번째 문자를 새 문자로 치환 EX var str = “web he she”; str.replace(“web”, “html”); “html he she” 반환 search(“찾을 문자”) 문자열 왼쪽부터 일치하는 문자를 찾아 첫번째 인덱스 번호 반환 EX var str = “web he she”; str.search(“he”); 4 반환 slice(a, b) a개의 문자를 자르고 b번째 이후에 문자를 자른 후 남은 문자 반환 EX var str = “hello javascript”; str.slice(3, 7); “lo j” 반환 3글자 “hel”까지 자르고 7번째 이후 글자인 “j” 이후 “avascript”를 자른 후 나머지 “lp j” 반환 EX var str = “hello javascript”; str.slice(3, -3); “llo javascr” 반환 -1은 뒤에서부터 첫번째 글자 의미 substring(a, b) a 인덱스부터 b 인덱스 이전 구간의 문자 반환 EX var str = “hello javascript”; str.substring(3, 7); “lo j” 반환 var str = “hello javascript” str.substring(3, -3); “hel” 반환 -3은 인덱스 0을 의미 = 인덱스 0부터 3 이전 구간의 문자 반환 substr(a, 문자 갯수) 문자열에 a 인덱스부터 지정한 문자 갯수만큼 문자열 반환 EX var str = “hello javascript”; str.substr(3, 2); “lo” 반환 3 문자열에서 인덱스 3인 “l”부터 2글자를 가져와 “lo” 반환 split(“문자”) 지정한 문자를 기준으로 문자 데이터를 나눠 배열에 저장해 반환 EX var str = “webkmobilek2002”; str.split(“k”); arr = [“web”, “mobile”, “2002”] 반환 toLowerCase() 문자열에서 영문 대문자를 모두 소문자로 변환 EX var str = “ABC”; str.toLowerCase(); “abc” 반환 toUpperCase() 문자열에서 영문 소문자를 모두 대문자로 변환 EX var str = “abc”, str.toUpperCase(); “ABC” 반환 length 문자열에서 문자의 갯수 반환 EX var str = “hello welcome”; str.length; 13 반환 concat(“새로운 문자”) 문자열에 새로운 문자열 결합 EX var str = “hello”; str.concat(“web”); “hello web” 반환 charCodeAt(index) 문자열 인덱스에 해당 문자의 아스키 코드값 반환 EX var str = “ABC”; str.charCodeAt(0); “A”의 아스키 코드값 65 반환 fromCharCode(아스키 코드 값) 아스키 코드값에 해당하는 문자 반환 EX String.fromCharCode(65); “A” 반환 trim() 문자의 앞 또는 뒤의 공백 문자열 삭제(“ hello “ -&gt; “hello”) EX var str = “h el l o”; str.trim(); 공백이 제거된 “hello” 반환 문자열 객체 예제1 문자열 객체에 내장되어 있는 메서드를 사용해 현재 문자에 지정한 위치(인덱스) 또는 특정 문자에 대한 정보를 호출해 출력 04_2_builtInObject_ex9_string1.html 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859var t = \"Hello Thank you good luck to you\";//인덱스 16에 저장된 문자 호출 | \"g\"document.write(t.charAt(16), \"&lt;br/&gt;\");//문자열 왼쪽에서부터 제일 먼저 발견된 \"you\"의 인덱스 값 반환 | 12document.write(t.indexOf(\"you\"), \"&lt;br/&gt;\");//문자열 인덱스 16 위치부터 제일 먼저 발견된 \"you\"의 인덱스 값 반환 | 29document.write(t.indexOf(\"you\", 16), \"&lt;br/&gt;\");//문자열 오른쪽에서부터 왼쪽 방향으로 제일 먼저 발견된 \"you\"의 인덱스 값 반환 | 29document.write(t.lastIndexOf(\"you\"), \"&lt;br/&gt;\");//문자열 인덱스 25부터 왼쪽 방향으로 제일 먼저 발견된 \"you\"의 인덱스값 반환 | 12document.write(t.lastIndexOf(\"you\", 25), \"&lt;br/&gt;\");//문자열 왼쪽에서부터 제일 먼저 발견된 \"luck\"과 일치되는 문자를 찾아 반환document.write(t.match(\"luck\"), \"&lt;br/&gt;\");//문자열 왼쪽에서부터 제일 먼저 발견된 \"you\"의 인덱스 값 반환 | 12document.write(t.search(\"you\"), \"&lt;br/&gt;\");//문자열 인덱스 21부터 네 글자 가져오기 | \"luck\"document.write(t.substr(21, 4), \"&lt;br/&gt;\");//문자열 인덱스 6부터 12이전까지의 문자 가져오기 | \"Thank\"document.write(t.substring(6, 12), \"&lt;br/&gt;\");//문자열 왼쪽에서부터 제일 먼저 발겨된 \"you\"를 \"me\"로 치환document.write(t.replace(\"you\", \"me\"), \"&lt;br/&gt;\");//문자열의 영문자가 모두 소문자로 바뀐 문자열 반환 | hello thank you good luck to youdocument.write(t.toLowerCase(), \"&lt;br/&gt;\");//문자열의 영문자가 모두 대문자로 바뀐 문자열 반환 | HELLO THANK YOU GOOD LUCK TO YOUdocument.write(t.toUpperCase(), \"&lt;br/&gt;\"); //문자열의 문자 총 갯수 반환. 공백도 문자로 취급 | 32document.write(t.length, \"&lt;br/&gt;\");//공백 문자를 기준으로 문자 분리. 분리된 문자열은 배열에 저장되어 s에 할당var s = t.split(\" \");//s의 인덱스 0에 저장된 문자열 출력 | \"Hello\"document.write(s[0], \"&lt;br/&gt;\");//s의 인덱스 4에 저장된 문자열 출력 | \"luck\"document.write(s[4], \"&lt;br/&gt;\");var str = \"A\";//변수에 저장된 문자열 중 0번 인덱스의 문자 \"A\"의 아스키 코드값 반환var t = str.charCodeAt(0);//\"A\"의 아스키 코드값 65 출력document.write(t);//코드값 65에 해당하는 문자 반환document.write(String.fromCharCode(65), \"&lt;br/&gt;\"); 문자열 객체 예제2 방문자로부터 이름을 영문으로 입력받은 후 방문자가 영문 이름을 소문자로 작성했을 경우 대문자로 바꿔 출력 방문자로부터 연락처를 입력받은 후 정보가 누출되지 않도록 전화번호 뒤의 네자리는 ‘*’로 출력 04_2_builtInObject_ex10_string2.html 12345678var userName = prompt(\"당신의 영문 이름은?\", \"\");var upperName = userName.toUpperCase();document.write(upperName, \"&lt;br&gt;\");var userNum = prompt(\"당신의 연락처는?\", \"\");var result = userNum.substring(0, userNum.length - 4) + \"****\";document.write(result, \"&lt;br&gt;\"); 문자열 객체 예제3 문자열 객체 메서드를이용해 사용자로부터 입력받은 이메일의 유효성 검사 04_2_builtInObject_ex11_string3.html 1234567891011121314151617181920212223242526var userEmail = prompt(\"당신의 이메일 주소는?\", \"\");var arrUrl = [\".co.kr\", \".com\", \".net\", \".or.kr\", \".go.kr\"];var check1 = false;var check2 = false;if(userEmail.indexOf(\"@\") &gt; 0) &#123; //이메일 유효성 검사 //\"@\"를 정상적으로 작성했으면 check1에 true 저장 check1 = true;&#125;//arrUrl의 데이터 갯수(5) 반환for(var i = 0; i &lt; arrUrl.length; i++) &#123; //입력한 이메일과 arrUrl의 단어를 하나씩 비교해 1개의 단어라도 일치하면 check2에 true 저장 if(userEmail.indexOf(arrUrl[i]) &gt; 0) &#123; check2 = true; &#125;&#125;if(check1 &amp;&amp; check2) &#123; document.write(userEmail);&#125; else &#123; alert(\"이메일 형식이 잘못되었습니다.\");&#125; 다음 포스트 : 04-3. 브라우저 객체 모델","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"객체","slug":"객체","permalink":"http://nayoungkim0918.github.io/tags/객체/"},{"name":"내장 객체","slug":"내장-객체","permalink":"http://nayoungkim0918.github.io/tags/내장-객체/"}]},{"title":"[Do It!] 04-1. 객체","slug":"Do-It/Do-It-04-1","date":"2018-10-15T13:33:57.000Z","updated":"2018-10-15T13:33:57.000Z","comments":true,"path":"2018/10/15/Do-It/Do-It-04-1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/15/Do-It/Do-It-04-1/","excerpt":"","text":"04. 객체04-1. 객체04-2. 내장 객체04-3. 브라우저 객체 모델04-4. 총정리 실습!04-5. Mission! 04-1. 객체1. 객체란?2. 객체의 종류 1. 객체란? 자바스크립트는 객체(Object) 기반 언어 객체는 기능과 속성을 가짐 주변의 모든 사물 [EX] 객체(Object) : TV 기능(Function) : 켜다(); 끄다(); 음을 소거하다(); 볼륨을 높이다(); 볼륨을 낮추다(); 속성(Property) : 너비; 높이; 색상; 무게; 객체의 메서드와 속성을 사용하는 기본형 객체의 메서드와 속성 기본형1234객체.메서드(); //객체의 메서드 실행=======================객체.속성; //객체의 속성값 호출객체.속성 = 값; //객체의 속성값 변경 [EX] 메서드와 속성의 사용 방법 올바른 예 TV.켜다(); TV.끄다(); 잘못된 예 TV.앞으로전진해(); (X) 자동차.앞으로전진해(); (O) ‘앞으로 전진해()’는 TV가 아니라 자동차에나 있을 버반 기능 자바스크립트에서 TV의 너비와 색상, 속성 정보를 알고 싶은 경우 tv의 속성값 호출 TV.width; (tv의 너비) TV.color; (tv의 색상) tv의 속성값 변경 TV.color = black; 2. 객체의 종류 내장 객체 자바스크립트 엔진에 내장돼 있어 필요한 경우에 생성해 사용 문자(String), 날짜(Date), 배열(Array), 수학(math) 등 EX 오늘의 날짜 Date.getDate(); 브라우저 객체 모델(BOM, Browser Object Model) 브라우저에 계층 구조로 내장돼 있는 객체 window, screen, location, history, navigator 등 브라우저(window)는 document와 location객체의 상위 객체 EX 자바스크립트를 이용해 현재 열려 있는 사이트에서 다른 사이트로 이동 location 객체에 참조 주소(href) 속성 변경 window.location.href = “사이트 URL”; 문서 객체 모델(DOM, Document Object Model) HTML 문서 구조 문서 객체 모델에서는 HTML의 모든 요소들을 문서 객체로 선택해 자유롭게 속성 변경 가능 선택한 문서 객체에 원하는 스타일(CSS) 적용 가능 자바스크립트 문서 객체 모델은 IE8 이하 버전에서는 호환성이 떨어지므로 사용하기 힘듦 이를 극복하기 위해 제이쿼리 문서 객체 모델 을 많이 사용 기본 구조 이미지의 src 속성을 바꾸고 싶다면 img 태그를 선택해 src 속성 변경HTML 문서의 기본 구조123456789101112&lt;html&gt; &lt;!--최상위 객체--&gt; &lt;head&gt; &lt;!--&lt;html&gt;의 하위 객체--&gt; . . . &lt;/head&gt; &lt;body&gt; &lt;!--&lt;html&gt;의 하위 객체--&gt; . . . &lt;/body&gt;&lt;/html&gt; 다음 포스트 : 04-2. 내장 객체","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"객체","slug":"객체","permalink":"http://nayoungkim0918.github.io/tags/객체/"}]},{"title":"[Do It!] 03-5. Mission!","slug":"Do-It/Do-It-03-5","date":"2018-10-14T08:32:08.000Z","updated":"2018-10-14T08:32:08.000Z","comments":true,"path":"2018/10/14/Do-It/Do-It-03-5/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/14/Do-It/Do-It-03-5/","excerpt":"","text":"03. 제어문03-1. 제어문이란?03-2. 조건문03-3. 선택문03-4. 반복문03-5. Mission! 03-5. Mission 1while 문을 이용해 구구단 5단 출력하기 Mission1 문제 풀이 03_5_mission1.html 123456var i = 1;while(i &lt;= 9) &#123; document.write(\"5 x \" + i + \" = \" + 5 * i, \"&lt;br&gt;\"); i++;&#125; 03-5. Mission 2중첩 for 문을 이용해 5행 5열 표를 만들고, 데이터를 1부터 25까지 출력 Mission2 문제 풀이 03_5_mission2.html 123456789101112var i = 1;document.write(\"&lt;table border='1'&gt;\");for(var row = 1; row &lt;= 5; row++) &#123; document.write(\"&lt;tr&gt;\"); for(var col = 1; col &lt;=5; col++) &#123; document.write(\"&lt;td&gt;\" + i + \"&lt;/td&gt;\"); i++; &#125; document.write(\"&lt;/tr&gt;\");&#125;document.write(\"&lt;/table&gt;\"); 다음 포스트 : 04-1. 객체","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"Mission","slug":"Mission","permalink":"http://nayoungkim0918.github.io/tags/Mission/"}]},{"title":"[Do It!] 03-4. 반복문","slug":"Do-It/Do-It-03-4","date":"2018-10-12T07:02:34.000Z","updated":"2018-10-12T07:02:34.000Z","comments":true,"path":"2018/10/12/Do-It/Do-It-03-4/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/12/Do-It/Do-It-03-4/","excerpt":"","text":"순서도 추가해야함!! 03. 제어문03-1. 제어문이란?03-2. 조건문03-3. 선택문03-4. 반복문03-5. Mission 03-4. 반복문1. while 문2. do while 문3. for 문4. break 문5. continue 문6. 중첩 for 문 반복문을 이용하면 코드를 원하는 횟수만큼 반복하여 실행할 수 있다. 1. while 문 조건식을 만족할 때까지 코드를 여러 회 반복하여 실행 while 문 기본형 조건식을 만족할 때까지 중괄호({…}) 안에 있는 코드를 반복 실행 실행 순서 조건식 검사 조건식이 true일 경우, 중괄호 안의 코드와 증감식 실행 조건식 재검사 while 문 기본형123456var 변수 = 초깃값;while(조건식) &#123; 자바스크립트 코드; 증감식;&#125; while 문 예제1 ‘안녕하세요1~ 안녕하세요10’까지 1씩 증가하면서 10회 출력03_4_loop_ex1_while1.html 12345678910// 문자열 데이터는 줄을 바꾸면 오류 발생// \\와 함께 코드를 작성하면 문자열의 줄을 바꿔도 오류 발생 없음var i = 1;while(i &lt;= 10) &#123; document.write(\"안녕하세요\", + ㅑ, \"&lt;/br&gt;\"); i++;&#125; document.write(\"======The End======\"); while 문 예제2 1부터 30까지의 숫자 중 2의 배수이면서 6의 배수인 숫자만 출력하는 예제03_4_loop_ex2_while2.html 12345678var i = 1;while(i &lt;= 30) &#123; if((i % 2 == 0) &amp;&amp; (i % 6 == 0)) &#123; document.write(i, \"&lt;/br&gt;\"); &#125; i++;&#125; while 문 예제3 20부터 10까지의 숫자 중 짝수일 경우에는 파란색으로 출력되고, 홀수일 경우에는 빨간색으로 출력03_4_loop_ex3_while3.html 12345678910var i = 20;while(i &gt;= 10) &#123; if(i % 2 == 0) &#123; //i의 값이 짝수면 실행 document.write(\"&lt;p class='blue'&gt;\" + i + \"&lt;/p&gt;\"); &#125; else &#123; //i의 값이 홀수면 실행 document.write(\"&lt;p class='red'&gt;\" + i + \"&lt;/p&gt;\"); &#125; i--;&#125; 2. do while 문 반드시 한 번은 코드를 실행하고 조건식 검사 while : 조건식의 만족 여부를 먼저 검사한 후 중괄호에 있는 코드의 실행 여부를 결정 do while 문 기본형 먼저 중괄호({…}) 안에 있는 코드 실행 후 조건식 검사 do while 문 기본형123456var 변수 = 초깃값;do &#123; 자바스크립트 코드; 증감식;&#125;while(조건식) do while 문 예제 03_4_loop_ex4_dowhile.html12345var i = 10;do &#123; document.write(\"hello!\");&#125; while(i &lt; 3) 3. for 문 조건식을 만족할 때까지 특정 코드를 반복 실행 while 문과 동일한 기능이지만, 편리성 때문에 높은 사용 빈도 실행 순서 초깃값 조건식 자바스크립트 코드 증감식 조건식 for 문 기본형 실행 순서도 변수 i에 초깃값 1을 저장 조건식을 만족할 경우 중괄호의 코드를 실행 증가 연산자로 변수 i의 값이 1만큼 증가 다시 조건식의 만족 여부를 검사한 후 중괄호의 코드를 실행할 지 아니면 종료할지 결정for 문 기본형123for(초깃값; 조건식; 증감식) &#123; 자바스크립트 코드;&#125; for 문 예제1 ‘반복1 ~ 반복10’까지 i를 1씩 증가하며 출력03_4_loop_ex5_for1.html123for(var i = 1; i &lt;= 10; i++) &#123; document.write(\"반복\" +i, \"&lt;br&gt;\");&#125; for 문 예제2 1부터 100까지 5의 배수일 경우에는 빨간색 글자 7의 배수일 경우에는 초록색 글자 5의 배수이면서 7의 배수일 경우에는 아쿠아색 글자로 출력03_4_loop_ex6_for2.html12345678910111213for(var i = 1; i &lt;= 100; i++) &#123; if(((i % 5) == 0) &amp;&amp; ((i % 7) != 0)) &#123; //i의 값이 5의 배수이면서 7의 배수가 아니면 실행 document.write(\"&lt;p class = 'red'&gt;\" + i + \"&lt;/p&gt;\"); &#125; else if(((i % 7) == 0) &amp;&amp; ((i % 5) != 0)) &#123; //i의 값이 7의 배수이면서 5의 배수가 아니면 실행 document.write(\"&lt;p class = 'green'&gt;\" + i + \"&lt;/p&gt;\"); &#125; else if(((i % 7) == 0) &amp;&amp; ((i % 5) == 0)) &#123; //i의 값이 7의 배수이면서 5의 배수이면 실행 document.write(\"&lt;p class = 'aqua'&gt;\" + i + \"&lt;/p&gt;\"); &#125;&#125; 4. break 문 반복문을 강제 종료할 때 사용 반복문인 while 문 또는 for 문에서 break 문을 실행하면 조건식과 상관엇이 강제로 반복문 종료 break 문 기본형 break 문이 코드보다 앞에 있으므로 코드는 실행되지 않고 for 문과 while 문이 바로 종료break 문 기본형12345678910111213for(초깃값; 조건식; 증감식) &#123; break; //반복문 강제 종료 자바스크립트 코드;&#125;==================================var 변수 = 초깃값;while(조건식) &#123; break; //반복문 강제 종료 자바스크립트 코드; 증감식;&#125; break 문 예제1 for 문을 이용해 ‘반복1 ~ 반복10’까지 i를 1씩 증가하며 출력 break 문을 사용해 변수 i의 값이 6일 경우 강제 종료03_4_loop_ex7_break.html12345for(var i = 1; i &lt;= 10; i++) &#123; if(i == 6) break; document.write(i, \"&lt;br&gt;\");&#125;document.write(\"======The End======\"); 5. continue 문 반복문에서만 사용 가능 while : continue 문 다음에 오는 코드는 무시하고 바로 조건식으로 이동해 조건 검사 for : continue 문 다음에 오는 코드는 무시하고 바로 증감식으로 이동해 증감 연산 continue 문 기본형 continue 문 기본형12345678910111213for(초깃값; 조건식; 증감식) &#123; continue; 자바스크립트 코드;&#125;==================================var 변수 = 초깃값;while(조건식) &#123; 증감식; continue; 자바스크립트 코드;&#125; break 문 예제 for 문을 이용해 1부터 10까지 i가 2의 배수일 경우에만 continue 문을 실행하여 홀수만 출력03_4_loop_ex8_continue.html123456for(var i = 1; i &lt;= 10; i++) &#123; //반복문 이후의 코드 실행을 건너뛰고 다시 반복문의 증감식 수행 if(i % 2 == 0) continue; document.write(i, \"&lt;br&gt;\");&#125;document.write(\"======The End======\"); 6. 중첩 for 문 for 문 안에 for 문을 사용한 것 EX 자바스크립트를 이용해 3행 5열의 표를 만든다고 할 때 1행씩 행이 만들어질 때마다 5개의 열을 만들어야 할 경우에 사용 중첩 for 문 기본형 중첩 for 문 기본형12345for(초깃값; 조건식; 증감식) &#123; //바깥쪽 for 문 for(초깃값; 조건식; 증감식) &#123; //안쪽 for 문 자바스크립트 코드; &#125;&#125; 중첩 for 문 예제 중첩 for 문을 이용해 ‘1행 열’부터 ‘3행 2열’까지 출력03_4_loop_ex9_중첩 for.html1234567for(var i = 1; i &lt;= 3; i++) &#123; //바깥쪽의 반복문이 1회 실행되면 앉쪽의 반복문은 2회 실행 for(var k = 1; k &lt;= 2; k++) &#123; document.write(i + \"행\" + k + \"열\", \"&lt;br&gt;\"); &#125; document.write(\"&lt;br&gt;\");&#125; 다음 포스트 : 03-5. Mission!","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"제어문","slug":"제어문","permalink":"http://nayoungkim0918.github.io/tags/제어문/"},{"name":"반복문","slug":"반복문","permalink":"http://nayoungkim0918.github.io/tags/반복문/"},{"name":"while","slug":"while","permalink":"http://nayoungkim0918.github.io/tags/while/"},{"name":"do while","slug":"do-while","permalink":"http://nayoungkim0918.github.io/tags/do-while/"},{"name":"for","slug":"for","permalink":"http://nayoungkim0918.github.io/tags/for/"},{"name":"break","slug":"break","permalink":"http://nayoungkim0918.github.io/tags/break/"},{"name":"continue","slug":"continue","permalink":"http://nayoungkim0918.github.io/tags/continue/"},{"name":"중첩 for","slug":"중첩-for","permalink":"http://nayoungkim0918.github.io/tags/중첩-for/"}]},{"title":"[Do It!] 03-3. 선택문","slug":"Do-It/Do-It-03-3","date":"2018-10-08T07:12:07.000Z","updated":"2018-10-08T07:12:07.000Z","comments":true,"path":"2018/10/08/Do-It/Do-It-03-3/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/08/Do-It/Do-It-03-3/","excerpt":"","text":"이미지 추가해야함!!! 03. 제어문03-1. 제어문이란?03-2. 조건문이란?03-3. 선택문03-4. 반복문03-5. Mission 03-3. 선택문1. switch 문 1. switch 문 변수에 저장된 값과 switch 문에 있는 case(경우의 값)을 검사하여 변수와 경우의 값에서 일치하는 값이 있을 때 그에 해당하는 코드 실행 if 문과 용도는 비슷하나 if 문은 만족하는 데이터가 여러 개일 경우 주로 사용 switch 문은 여러 경우의 값 중 일치하는 데이터를 찾아 그에 해당하는 코드 실행 시 아용 switch 문 기본형 변수에 저장된 값은 switch 문을 만나면 case의 값을 하나씩 검사 일치하는 데이터가 있으면 그에 해당하는 코드 실행 break 문을 만나 switch 문 종료 case 중 일치하는 값이 없으면 마지막 default에 있는 코드 실행 후 switch 문 종료 break : 반복문을 강제로 끝낼 떄 사용 switch 문 기본형123456789101112131415161718var 변수 = 초깃값;switch(변수) &#123; case 값1: 코드1; break; case 값2: 코드2; break; case 값3: 코드3; break; case 값4: 코드4; break; default: 코드6;&#125; switch 문 예제 질의응답 창을 통해 포털 검색 사이트 이름을 입력받고, switch 문을 이용하여 입력한 이름에 해당하는 사이트로 이동하도록 작성한 예제03_3_select_ex1_switch.html 1234567891011121314151617181920// 문자열 데이터는 줄을 바꾸면 오류 발생// \\와 함께 코드를 작성하면 문자열의 줄을 바꿔도 오류 발생 없음var site = prompt(\"네이버, 다음, 네이트, 구글 중 \\즐겨 사용하는 포털 검색 사이트는?\", \"\");var url;switch(site) &#123; case \"구글\": url = \"www.google.com\"; break; case \"다음\": url = \"www.daum.net\"; break; case \"네이버\": url = \"www.naver.com\"; break; case \"네이트\": url = \"www.nate.com\"; break; default: alert(\"보기 중에 없는 사이트 입니다.\");&#125;//url에 저장된 주소로 이동if(url) location.href = \"http://\" + url 다음 포스트 : 03-4. 반복문","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"제어문","slug":"제어문","permalink":"http://nayoungkim0918.github.io/tags/제어문/"},{"name":"선택문","slug":"선택문","permalink":"http://nayoungkim0918.github.io/tags/선택문/"},{"name":"switch","slug":"switch","permalink":"http://nayoungkim0918.github.io/tags/switch/"}]},{"title":"[Do It!] 03-2. 조건문","slug":"Do-It/Do-It-03-2","date":"2018-10-01T10:58:57.000Z","updated":"2018-10-01T10:58:57.000Z","comments":true,"path":"2018/10/01/Do-It/Do-It-03-2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/10/01/Do-It/Do-It-03-2/","excerpt":"","text":"03. 제어문03-1. 제어문이란?03-2. 조건문03-3. 선택문03-4. 반복문03-5. Mission 03-2. 조건문1. 조건문이란?2. if 문3. else 문4. else if 문5. 중첩 if 문6. 조건식에 논리형 데이터가 아닌 다른 형이 오는 경우 1. 조건문이란? 조건식의 값이 참(true)인지, 거짓(false)인지에 따라 자바스크립트 코드 제어 if 문, else 문, else if 문 [EX] 질의응답 창을 이용해 방문자가 좋아하는 숫자 입력받기 입력된 값을 2로 나누어 나머지 값이 0이면 “당신이 좋아하는 숫자는 짝수입니다” 출력 아닐 경우에는 “당신이 좋아하는 숫자는 홀수입니다.” 출력 수를 나눈 나머지 값에 따라 다른 결과를 출력하게 하려면 조건문 사용 2. if 문 조건식을 만족(true)할 경우에만 {}내부코드 실행 Boolean() 내장 메서드와 마찬가지로 그 어떤 데이터를 입력해도 true 또는 flase 반환 if 문 기본형 if 문 기본형123if(조건식) &#123; 코드;&#125; 적용 예제1 num &lt; 500의 비교 결과는 10 &lt; 500 이므로 true 반환 조건문 내의 코드 실행 시 “true” 출력if문 적용 예제1 1234var num = 10;if(num &lt; 500) &#123; //true 반환 document.write(\"hello\");&#125; 적용 예제2 조건식에 있는 0은 Boolean() 메서드에 0을 입력했을 때의 결과와 동일 false를 반환해 조건문의 코드 실행하지 않음if문 적용 예제2 123if(0) &#123; //false 반환 document.write(\"hello\");&#125; if 문 예제 1 03_2_controller_ex1_if1.html 1234567var walkAmount = prompt(\"당신의 하루 걷는 양은 몇 보인가요?\");if(walkAmount &gt;= 10000) &#123; document.write(\"매우 좋은 습관을 지니고 계시는군요!!\", \"&lt;br&gt;\");&#125;document.write(\"==========The End==========\"); if 문 예제 203_2_controller_ex1_if2.html 1234567var min = prompt(\"당신의 하루 통화량은 몇 분 인가요?\", \"0\");if(min &gt;= 60) &#123; document.write(\"많이 사용하는 편이네요\", \"&lt;br&gt;\");&#125;document.write(\"==========The End==========\"); 3. else 문 조건식을 만족(true)할 경우와 만족하지 않을(false) 경우에 따라 달라지는 실행코드 두 가지 결과 else 문 기본형else 문 기본형 12345if(조건식) &#123; 코드1;&#125; else &#123; 코드2;&#125; else 문 예제 103_2_controller_ex2_else1.html 1234567var num = prompt(\"당신이 좋아하는 숫자는?\",\"0\");if(num % 2 == 0) &#123; //2로 나눈 나머지가 0일 때 = 짝수 document.write(\"당신이 좋아하는 숫자는 짝수입니다.\");&#125; else &#123; //2로 나눈 나머지가 0이 아닐 때 = 나머지가 1일 때 = 홀수 document.write(\"당신이 좋아하는 숫자는 홀수입니다.\");&#125; confirm() 메서드 확인 팝업을 띄우는 메서드 [확인] 클릭 시 true 반환 [취소] 클릭 시 false 반환 else 문 예제 203_2_controller_ex2_else2.html 1234567var result = confirm(\"정말로 회원을 탈퇴하시겠습니까?\");if(result) &#123; //confirm 창에서 [확인] 클릭 document.write(\"탈퇴 처리되었습니다.\");&#125; else &#123; //confirm 창에서 [취소] 클릭 document.write(\"탈퇴 취소되었습니다.\");&#125; 4. else if 문 두 가지 이상의 조건식과 정해 놓은 조건을 만족하지 않았을 때 실행되는 코드 else 문 기본형 가장 위에 있는 조건식1부터 5까지 차례로 조건을 검사 만족(true)하는 값이 나오면 해당 조건문의 코드를 실행하고 조건문 종료 만족(true)하는 값이 하나도 없으면 else 문의 중괄호{…}에 있는 코드 실행else if 문 기본형12345678910111213if(조건식1) &#123; 코드1;&#125; else if(조건식2) &#123; 코드2;&#125; else if(조건식3) &#123; 코드3;&#125; else if(조건식4) &#123; 코드4;&#125; else if(조건식5) &#123; 코드5;&#125; else &#123; 코드6&#125; else if 문 예제 03_2_controller_ex3_elseif.html 12345678910111213var mon = prompt(\"현재는 몇 월입니까?\");if(mon &gt;= 9 &amp;&amp; mon &lt;= 11) &#123; //9 ~ 11 document.write(\"독서의 계절 가을이네요!!\");&#125; else if(mon &gt;= 6 &amp;&amp; mon &lt;= 8) &#123; //6 ~ 8 document.write(\"여행가기 좋은 여름이네요!!\");&#125; else if(mon &gt;= 3 &amp;&amp; mon &lt;= 5) &#123; //3 ~ 5 document.write(\"햇살 가득한 봄이네요!!\");&#125; else if(mon == 12 || mon == 1 || mon ==2 ) &#123; //12 ~ 2 document.write(\"스키의 계절 겨울이네요!!\");&#125; else &#123; // 1 ~ 12 범위를 벗어난 경우 document.write(mon + \"월은 없습니다.\");&#125; 5. 중첩 if 문 조건문 안에 조건문이 있는 경우 else 문 기본형 바깥쪽 조건식1을 만족해야만 안쪽에 있는 조건식2를 검사 조건식2를 만족하지 않으면 조건식1의 중괄호 안에 있는 코드만 실행 후 종료중첩 if 문 기본형12345if(조건식1) &#123; if(조건식2) &#123; 코드; &#125;&#125; 중첩 if 문 예제 로그인 시, 아이디를 먼저 검사한 후 비밀번호 검사 아이디와 비밀번호가 일치하는 경우 환영 문구 출력 비밀번호가 일치하지 않을 경우 브라우저 새로고침03_2_controller_ex4_중첩if.html 1234567891011121314151617var id = \"easy1004\"; //아이디var pw = \"112233\"; //비밀번호var user_id = prompt(\"아이디는?\", \"\"); //아이디 입력var usre_pw = prompt(\"비밀번호는?\", \"\"); //비밀번호 입력if(id == user_id) &#123; //아이디가 일치하면 실행 if(pw == user_pw) &#123; //비밀번호가 일치하면 실행 document.wirte(user_id + \"님 반갑습니다!\"); &#125; else &#123; //비밀번호가 일치하지 않으면 실행 alsert(\"비밀번호가 일치하지 않습니다.\"); location.reload(); //브라우저 새로고침 &#125;&#125; else &#123; //아이디가 일치하지 않으면 실행 alert(\"아이디가 일치하지 않습니다.\"); location.reload();&#125; 6. 조건식에 논리형 데이터가 아닌 다른 형이 오는 경우 조건식에 논리형 데이터(true, false)가 아닌 다른 형의 데이터가 입력돼도 true 또는 false로 인식 조건식에 논리형 데이터가 아닌 다른 형의 데이터가 입력되었을 때 반환되는 결과 무조건 false 반환 0 null “”(빈 문자) undefined 위의 4개 경우 외에는 true 반환 출력되는 경우1234var num = 3;if(num) &#123; //3은 true document.write(num);&#125; 출력되지 않는 경우1234var num = 0;if(num) &#123; //0은 false document.write(num);&#125; 다음 포스트 : 03-3. 선택문","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"제어문","slug":"제어문","permalink":"http://nayoungkim0918.github.io/tags/제어문/"},{"name":"조건문","slug":"조건문","permalink":"http://nayoungkim0918.github.io/tags/조건문/"},{"name":"if","slug":"if","permalink":"http://nayoungkim0918.github.io/tags/if/"},{"name":"else","slug":"else","permalink":"http://nayoungkim0918.github.io/tags/else/"},{"name":"else if","slug":"else-if","permalink":"http://nayoungkim0918.github.io/tags/else-if/"},{"name":"중첩 if","slug":"중첩-if","permalink":"http://nayoungkim0918.github.io/tags/중첩-if/"}]},{"title":"GitHub-MarkDown","slug":"GitHub/GitHub/GitHub-MarkDown","date":"2018-09-27T11:00:22.000Z","updated":"2018-09-27T11:00:22.000Z","comments":true,"path":"2018/09/27/GitHub/GitHub/GitHub-MarkDown/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/27/GitHub/GitHub/GitHub-MarkDown/","excerpt":"","text":"","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"Do It! 03-1. 제어문이란?","slug":"Do-It/Do-It-03-1","date":"2018-09-27T09:11:33.000Z","updated":"2018-09-27T09:11:33.000Z","comments":true,"path":"2018/09/27/Do-It/Do-It-03-1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/27/Do-It/Do-It-03-1/","excerpt":"","text":"03. 제어문03-1. 제어문이란?03-2. 조건문이란?03-3. 선택문03-4. 반복문03-5. Mission 3-1. 제어문이란?1. 개념 프로그램의 흐름을 제어할 수 있도록 도와주는 문장 2. 종류 조건문 조건을 만족하는지의 여부에 따라 코드 제어 if 문, else 문, else if 문 선택문 : 변수에 일치하는 경우의 값에 따라 코드 제어 switch 문 반복문 : 특정 코드를 여러 번 반복해서 실행 while 문, for 문 다음장 : 03-2. 조건문","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"제어문","slug":"제어문","permalink":"http://nayoungkim0918.github.io/tags/제어문/"}]},{"title":"[Do It!] 02-5. Mission!","slug":"Do-It/Do-It-02-5","date":"2018-09-26T15:08:33.000Z","updated":"2018-09-26T15:08:33.000Z","comments":true,"path":"2018/09/27/Do-It/Do-It-02-5/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/27/Do-It/Do-It-02-5/","excerpt":"","text":"02. 자바스크립트 기초 문법02-1. 자바스크립트 기초 문법02-2. 변수02-3. 연산자02-4. 총정리 실습!02-5. Mission! 02-5. Mission 1진영이의 하루 지출 내역이 다음과 같다고 할 때, 하루 지출 비용의 합계를 구한 후 적정 지출 비용의 초과 여부를 출력하세요. 진영이의 하루 지출 내역은 교통비 3000원, 식비 6000원, 음료비 3000원입니다. 삼항 조건 연산자를 사용하여 하루 적정 지출 비용인 1만 원을 초과했을 경우에는 “000원 초과”라고 출력하고, 아닐 경우에는 “돈 관리 잘 했어요!” 라고 출력하세요. Mission1 문제 풀이 02_5_mission1.html 12345var price1 = 3000;var price2 = 6000;var price3 = 3000;(price1 + price2 + price3) &gt; 10000 ? document.write(((price1 + price2 + price3) - 10000) + \"원 초과\") : document.write(\"돈 관리 잘 했어요!\"); 02-5. Mission 2다음 연산자를 이용하여 평균 판매량을 구하고, 4분기 판매량을 입력하여 평균 판매량의 이상/미달 값을 출력하세요. 질의응답 창을 이용하여 4분기 판매량을 입력하고, 전 분기 평균 판매량보다 판매량이 높거나 같을 경우에는 ‘판매량이 평균 이상입니다.’ 라고 출력하고, 낮을 경우에는 ‘판매량이 평균 미달입니다.’ 라고 화면에 출력하세요. 분기별 판매량 1분기 : 1200 2분기 : 1300 3분기 : 1000 Mission2 문제 풀이 02_5_mission2.html 123456var quarter1 = 1200;var quarter2 = 1300;var quarter3 = 1000; var quarter4 = prompt(\"4분기 판매량을 입력하세요.\", \"\");(quarter1 + quarter2 + quarter3)/3 &lt;= quarter4 ? document.write(\"판매량이 평균 이상입니다.\") : document.write(\"판매량이 평균 미달입니다.\"); 결과1. 평균 미달 결과2. 평균 이상 다음 포스트 : 03-1. 제어문이란?","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"Mission","slug":"Mission","permalink":"http://nayoungkim0918.github.io/tags/Mission/"}]},{"title":"Hexo Hueman 테마 커스터마이징 하기","slug":"GitHub/Hexo/Hexo-Themes-Hueman-Customizing","date":"2018-09-25T17:35:41.000Z","updated":"2018-09-25T17:35:41.000Z","comments":true,"path":"2018/09/26/GitHub/Hexo/Hexo-Themes-Hueman-Customizing/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/26/GitHub/Hexo/Hexo-Themes-Hueman-Customizing/","excerpt":"","text":"","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"[Do It!] 02-4. 총정리 실습! 적정 체중을 구하는 테스트기 만들기","slug":"Do-It/Do-It-02-4","date":"2018-09-24T14:10:49.000Z","updated":"2018-09-24T14:10:49.000Z","comments":true,"path":"2018/09/24/Do-It/Do-It-02-4/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/24/Do-It/Do-It-02-4/","excerpt":"","text":"02. 자바스크립트 기초 문법02-1. 자바스크립트 기초 문법02-2. 변수02-3. 연산자02-4. 총정리 실습!02-5. Mission! 02-4. 적정 체중을 구하는 테스트기 만들기 2장의 내용을 총 정리한 예제 이름, 신장, 몸무게를 입력받은 후, 아래 공식을 이용해 적정 체중 여부 출력하기 적정 체중 = (본인 신장 - 100) x 0.9 오차 범위 -5, +5 입력받기는 pompt(“질문”, “기본응답”); 활용 예제 문제 풀이 02_4_test_ex1.html 123456789101112var name = prompt(\"이름을 입력하세요\", \"\");var height = prompt(\"신장을 입력하세요\", \"\");var weight = prompt(\"체중을 입력하세요\", \"\");var properWeight = (height - 100) * 0.9;var result = (weight &gt;= (properWeight - 5)) &amp;&amp; (weight &lt;= (properWeight +5));document.write(\"이름 : \" + name + \"&lt;br&gt;\");document.write(\"신장 : \" + height + \"&lt;br&gt;\");document.write(\"체중 : \" + weight + \"&lt;br&gt;\");document.write(\"적정 체중 : \" + properWeight + \"&lt;br&gt;\");document.write(name + \"님은 \")result ? document.write(\"적정 체중 입니다.\") : document.write(\"적정 체중이 아닙니다.\"); 1. 이름 입력받기 2. 신장 입력받기 3. 체중 입력받기 4. 적정 체중 여부 확인 다음 포스트 : 02-5. Mission!","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"총 정리 실습","slug":"총-정리-실습","permalink":"http://nayoungkim0918.github.io/tags/총-정리-실습/"}]},{"title":"[Do It!] 02-3. 연산자","slug":"Do-It/Do-It-02-3","date":"2018-09-20T16:24:19.000Z","updated":"2018-09-20T16:24:19.000Z","comments":true,"path":"2018/09/21/Do-It/Do-It-02-3/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/21/Do-It/Do-It-02-3/","excerpt":"","text":"02. 자바스크립트 기초 문법02-1. 자바스크립트 기초 문법02-2. 변수02-3. 연산자02-4. 총정리 실습!02-5. Mission! 02-3. 연산자(Operator)연산자란?산술 연산자문자 결합 연산자대입 연산자증감 연산자비교 연산자논리 연산자연산자 우선순위삼항 조건 연산자 1. 연산자란? 연산자(Operator) 컴퓨터 상에서의 계산 작업을 위한 도구 자바스크립트에서 사용하는 연산자 산술, 문자 결합, 대입(복합 대입), 증감, 비교, 논리, 삼항 조건 2. 산술 연산자 산수 시간에 배운 사칙연산의 기능과 동일 더하기(+), 빼기(-), 곱하기(*), 나누기(/), 나머지(%) 반드시 2개의 연산 대상 데이터 필요 산술 연산자의 종류 종류 기본형 설명 + A+B 더하기 - A-B 빼기 * A*B 곱하기 / A/B 나누기 % A%B 나머지 산술 연산자 예제 02_3_operator_ex1.html 12345678910111213141516171819var num1 = 15; var num2 = 2;var result;document.write(\"숫자1 : \" + num1 + \"&lt;br&gt;\" + \" 숫자2 : \" + num2 + \"&lt;br&gt;&lt;br&gt;\"); result = num1 + num2;document.write(\"더하기 : \" + result + \"&lt;br&gt;\"); result = num1 - num2; document.write(\"빼기 : \" + result + \"&lt;br&gt;\"); result = num1 * num2; document.write(\"곱하기 : \" + result + \"&lt;br&gt;\"); result = num1 / num2; document.write(\"나누기 : \" + result + \"&lt;br&gt;\"); result = num1 % num2; document.write(\"나머지 : \" + result + \"&lt;br&gt;\"); 3. 문자 결합 연산자 피연산자(연산 대상 데이터)가 문자형 데이터 여러 개의 문자를 하나씩 문자형 데이터로 결합할 때 사용 더하기 피연산자에 문자형 데이터가 한 개 라도 포함된 경우 다른 피연산자의 데이터는 자동으로 문자형 데이터로 형변환 문자 결합이 이뤄져 하나의 문자형 데이터 반환 문자 결합 연산자 기본형12345문자형 데이터 + 문자형 데이터 = 하나의 문자형 데이터ex) \"do it \" + \"javascript\" = \"do it javascript\";문자형 데이터 + 숫자형 데이터 = 하나의 문자형 데이터ex) \"100\" + 200 = \"100200\"; 문자 결합 연산자 예제 02_3_operator_ex2.html12345678910111213141516var t1 = \"학교종이 \"; var t2 = \"땡땡땡 \";var t3 = 8282;var t4 = \"어서 모이자 \";var t5 = 100000;var t6 = 10000;var result;result = t1 + t2 + t3 + t4 + t5 + t6; document.write(\"문자 결합(산술괄호 X) : \" + result + \"&lt;br&gt;\"); result = t1 + t2 + t3 + t4 + (t5 + t6); document.write(\"문자 결합(산술괄호 O) : \" + result); result = result - t2;document.write(\"문자 분리(-) : \" + result); 산술 연산자를 포함하여 문자 결합 연산자를 수행했을 경우, 괄호가 없는 경우에는 숫자형 데이터가 문자형 데이터로 변환되어 연산된다. 하지만 괄호로 우선순위를 주었을 경우에는 산술 연산의 수행 결과가 문자형 데이터로 변환되어 문자 결합된다. 안된다는 걸 알고 있지만 - 를 이용해 문자를 분리할 수 있는 지도 테스트 해봤다. 결과는 역시나 NaN으로 출력된다. NaN(Not A Number) : 빼기 연산(-)은 산술 연산만 가능하다. 즉 숫자형 데이터만 가능하기 때문에 숫자형 데이터가 아닌 문자형 데이터는 빼기 연산이 불가능 하다는 뜻이다. 4. 대입 연산자 연산된 데이터를 변수에 저장할 때 사용 (=) 복합 대입 연산자 (+=, =-, *=, /=, %=) 산술 연산자와 대입 연산자가 복합적으로 적용된 것 대입 연산자의 종류 종류 풀이 A = B A = B A += B A = A+B A *= B A = A*B A /= B A = A/B A %= B A = A%B 대입 연산자 기본 예제 02_3_operator_ex3_1.html1234567891011121314151617var num1 = 10; var num2 = 3;num1 += num2;document.write(\"num1 += num2 = \" + num1 + \"&lt;br&gt;\"); num1 -= num2;document.write(\"num1 -= num2 = \" + num1 + \"&lt;br&gt;\"); num1 *= num2;document.write(\"num1 *= num2 = \" + num1 + \"&lt;br&gt;\"); num1 /= num2;document.write(\"num1 /= num2 = \" + num1 + \"&lt;br&gt;\"); num1 %= num2;document.write(\"num1 %= num2 = \" + num1 + \"&lt;br&gt;\"); 여러 개의 데이터로 저장된 HTML 태그를 복합 대입 연산자를 이용해 하나의 문자로 결합한 후 화면에 출력하는 예제 02_3_operator_ex3_2.html12345678var str = \"&lt;table border='1'&gt;\"; str += \"&lt;tr&gt;\";str += \"&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;\";str += \"&lt;/tr&gt;\";str += \"&lt;/table&gt;\"; document.write(str); 5. 증감 연산자 숫자형 데이터를 1씩 증가시키거나 감소시키는 데 사용 증가연산자 ++ , 감소연산자 – 단항 연산자 피연산자가 1개만 필요 변수의 위치에 따라 결괏값이 달라짐 증감 연산자 기본형123456789101112131. 변수의 값을 1만큼 감소 뱐수--; 또는 --변수;2. 변수의 값을 1만큼 증가 뱐수++; 또는 ++변수;------------------------------------------------------------ 1. 먼저 B의 값을 1만큼 증가시킨 후, 증가된 B의 값을 A에 대입 var A = ++B;2. 먼저 B의 값을 A에 대입시킨 후, B의 값을 1만큼 증가 var A = B++; 증감 연산자를 사용해 변수에 저장된 숫자를 증가하거나 감소해 문서에 출력하는 예제 02_3_operator_ex4.html12345678910111213141516171819var num1 = 10;var num2 = 20;var result;//num1(10)의 값이 1만큼 감소되어 num1에 9 저장num1--; document.write(\"10-- = \" + num1 + \"&lt;br&gt;\"); //num1(9)의 값이 1만큼 증가되어 num1에 10 저장num1++; document.write(\"9++ = \" + num1 + \"&lt;br&gt;\"); //num2(20)의 값이 result에 저장되고, num2의 값이 1만큼 증가되어 num2에 21 저장result = num2++; document.write(\"20++ = \" + result + \"&lt;br&gt;\"); //num2(21)의 값이 1만큼 증가되어 num2에 22가 저장되고, num2의 값이 변수 result에 저장result = ++num2; document.write(\"++21 = \" + result + \"&lt;br&gt;\"); 6. 비교 연산자 두 데이터를 ‘크다, 작다, 같다’와 같이 비교 할 때 사용하는 연산자 연산된 결괏값은 true(참), false(거짓) 로 논리형 데이터 반환 비교 연산자의 종류 종류 설명 비고 A &gt; B A가 B보다 크다 - A &lt; B A가 B보다 작다 - A &gt;= B A가 B보다 크거나 같다 - A &lt;= B A가 B보다 작거나 같다 - A == B A와 B는 같다 숫자 비교시, 자료형(숫자형, 문자형)에 관계없이 표기된 숫자만 일치하면 true 반환 [EX] 숫자형 10과 문자형 “10”은 같은 것으로 인식됨 A==B의 결괏값 = true A != B A와 B보다 다르다 숫자 비교시, 자료형(숫자형, 문자형)에 관계없이 표기된 숫자만 다르면 true 반환 [EX] 숫자형 10과 문자형 “10”은 같은 것으로 인식됨 A!=B의 결괏값 = false A === B A와 B는 같다 숫자 비교시, 반드시 표기된 숫자와 자료형도 일치해야 true 반환 [EX] 10과 “10”을 비교한 경우, 표기된 숫자는 같지만 자료형이 다르므로 false 반환 A !== B A와 B보다 다르다 숫자 비교시, 반드시 표기된 숫자와 자료형도 불일치해야 true 반환 [EX] 10과 “10”을 비교한 경우, 표기된 숫자는 같지만 자료형이 다르므로 true 반환 비교 연산자 ==, != 피연산자의 자료형이 비교 연산자의 실행 결과에 영향을 미치지 않는다. [EX] 변수 k에는 숫자형 데이터 10 저장, 변수 m에는 문자형 데이터 “10” 저장 숫자형 데이터 10과 같은지 비교했을 때, 둘 다 ture를 반환한다.123var k = 10, m = \"10\";k == 10; //truem == 10; //true 비교 연산자 ===, !== 피연산자의 자료형 에 따라 결괏값이 달라진다. [EX] 변수 k에는 숫자형 데이터 10 저장, 변수 m에는 문자형 데이터 “10” 저장 숫자형 데이터 10과 같은지 비교했을 때, k는 숫자형 데이터이므로, k===10은 true 반환 m은 문자형 데이터이므로, m===10은 false 반환123var k = 10, m = \"10\";k === 10; //truem === 10; //false 비교 연산자 예제 02_3_operator_ex5.html 1234567891011121314151617181920212223242526var a = 10;var b = 20;var c = 30;var f = \"20\";var result;result = a &gt; b; //falsedocument.write(\"10 &gt; 20 = \" + result, \"&lt;br&gt;\"); result = a &lt; b; //truedocument.write(\"10 &lt; 20 = \" + result, \"&lt;br&gt;\"); result = a &lt;= b; //truedocument.write(\"10 &lt;= 20 = \" + result, \"&lt;br&gt;\"); result = b == f; //truedocument.write(\"20 == '20' = \" + result, \"&lt;br&gt;\"); result = a != b; //truedocument.write(\"10 != 20 = \" + result, \"&lt;br&gt;\"); result = b === f; //falsedocument.write(\"20 === '20' = \" + result, \"&lt;br&gt;\"); result = b !== f; //truedocument.write(\"20 !== '20' = \" + result, \"&lt;br&gt;\"); 7. 논리 연산자 ||(or), &amp;&amp;(and), !(not) 피연산자가 논리형 데이터인 true 또는 false로 결괏값 반환 논리 연산자의 종류 종류 설명 II OR 연산자 피연산자 중 값이 하나라도 true가 존재하면 true 반환 &amp;&amp; AND 연산자 피연산자 중 값이 하나라도 false가 존재하면 false 반환 ! NOT 연산자 단항 연산자 피연산자의 값이 true이면 반대로 false 반환 8. 연산자 우선순위 일반적인 산수에도 우선순위가 존재하듯이 코딩 연산자에도 우선순위가 존재한다.① (괄호)② 단항 연산자 : –, ++, !③ 산술 연산자 : *, /, %, +, -④ 비교 연산자 : &gt;, &gt;=, &lt;, &lt;=, ==, ===, !==, !=⑤ 논리 연산자 : &amp;&amp; ||⑥ 대입/복합대입 연산자 : =, +=, -=, *=, /=, %= [EX] ++A * B &lt;= C 변수 A에 데이터 1을 증가시키고 B를 곱한 다음 그 값을 C와 비교한 후 최종 결괏값 반환 연산자 우선순위 예제(비교+논리) 02_3_operator_ex6.html 1234567891011121314151617181920var a = 10;var b = 20;var m = 30;var n = 40;var result;result = a &gt; b || b &gt;= m || m &gt; n; //false || false || falsedocument.write(\"10 &gt; 20 || 20 &gt;= 30 || 30 &gt; 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //false result = a &gt; b || b &gt;= m || m &lt;= n; //false || false || truedocument.write(\"10 &gt; 20 || 20 &gt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //true result = a &lt;= b &amp;&amp; b &gt;= m &amp;&amp; m &lt;= n; //true &amp;&amp; false &amp;&amp; truedocument.write(\"10 &lt;= 20 || 20 &gt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //false result = a &lt;= b &amp;&amp; b &lt;= m &amp;&amp; m &lt;= n; //true &amp;&amp; true &amp;&amp; truedocument.write(\"10 &lt;= 20 || 20 &lt;= 30 || 30 &lt;= 40 : \" + result, \"&lt;br&gt;&lt;br&gt;\"); //true result = !(a&gt;b); //!false를 계산document.write(\"!(10 &gt; 20) : \" + result); //true 9. 삼항 조건 연산자 조건식(true 또는 false의 결괏값 반환)의 결과에 따라 실행 결과가 달라지는 삼항 연산자 연산을 위해 피연산자가 3개 필요 연산한 결과 조건식의 만족 여부에 따라 실행하는 코드를 다르게 실행하고자 할 때 사용 [EX] 방문자로부터 입력받은 나잇값이 20세 이상이면 ‘성인’, 미만이면 ‘미성년자’ 출력 삼항 조건 연산자 기본형12345조건식 ? 자바스크립트 코드 1 : 자바스크립트 코드 2; -------------------------------------------------조건식 ? true 시 수행 : false 시 수행-------------------------------------------------1항의 조건식이 true 이면 2항의 내용 수행, false 이면 3항의 내용 수행 삼항 조건 연산자 예제 02_3_operator_ex7.html12345var a = 10;var b = 3; var result = a &gt; b ? \"javascript\" : \"hello\";document.write(\"'10 &gt; 3' 이 참이면 javascript, 거짓이면 hello 출력 &lt;br&gt; 결과 = \" + result); //true 다음 포스트 : 02-4. 총정리 실습!","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"연산자","slug":"연산자","permalink":"http://nayoungkim0918.github.io/tags/연산자/"}]},{"title":"[Do It!] 02-2. 변수","slug":"Do-It/Do-It-02-2","date":"2018-09-12T20:02:36.000Z","updated":"2018-09-18T20:02:36.000Z","comments":true,"path":"2018/09/13/Do-It/Do-It-02-2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/13/Do-It/Do-It-02-2/","excerpt":"","text":"02. 자바스크립트 기초 문법02-1. 자바스크립트 기초 문법02-2. 변수02-3. 연산자02-4. 총정리 실습!02-5. Mission! 02-2. 변수1. 변수란? 변수(Variables) 변하는 데이터(값)를 저장할 수 있는 메모리 공간 데이터를 담을 수 있는 그릇 하나의 변수에는 한 개의 데이터만 저장 새로운 데이터가 들어오면 기존 데이터는 메모리 공간에서 지워짐 저장 가능한 데이터 종류 문자형(String) 숫자형(Number) 논리형(Boolean) 빈 데이터(Null) 변수 선언 var 변수명; 또는 var 변수명 = 값; 변수명 한글 사용 불가 영문, 숫자, 특수문자(_, $) 낙타(Camel) 표기법 단어와 단어의 조합 두 번째 단어의 첫 글자는 대문자로 표기 두번째 단어의 첫 글자는 대문자로 표기 의미에 맞게 만들기 mathNum : 수학 시험 점수 저장변수 변수 선언 변수명으로 데이터를 저장할 수 있는 공간 생성 초기에는 값이 등록되지 않은 상태(Null)로 생성 1234&lt;script&gt; var box; //box 라는 이름의 변수 선언 (Null 상태) box = 100; //변수 box에 숫자형 데이터 100 대입&lt;/script&gt; 변수에는 하나의 값만 대입 가능 변수에 값을 2번 넣는 경우 기존에 저장돼 있던 값은 삭제되고 새로운 데이터 저장 02_2_var_ex1.html12345678&lt;script&gt; var box; //box라는 이름의 변수 선언 document.write(box + \"\\n\"); //undefined box = 100; //변수 box에 숫자형 데이터 100 대입 document.write(box + \"\\n\"); //100 box = 30; //변수 box에 숫자형 데이터 30 대입 document.write(box) //30 &lt;/script&gt; 책에서는 가장 마지막 box만 출력했지만 값을 비교해보고 싶어서 모든 경우의 box를 출력해봤다.① var box; =&gt; undefined 값이 지정되지 않은 변수는 null 이라고 출력될 줄 알았지만 undefined 라고 출력됐다. 아직 확실하게 안 것은 아니지만 javascript는 기존에 배웠던 C언어 나 JAVA 와는 달리 자료형이 따로 없다. 문자형은 Char/String, 숫자형은 Int/Float/Double 등의 지정된 자료형 을 반드시 선언과 동시에 선택해야 한다. 하지만 javascript 에서는 특정 자료형 대신 var 라는 공통된 자료형을 사용한다. 문자열, 정수, 실수, 배열, 클래스 등을 담을 수 있다. 이런 특징으로 보아 단순히 비어있다는 의미의 null 보다는 아직 정의되지 않았다는 의미로 undefined로 출력되는 것 같다. 이 부분에 대해서는 확실하게 알게되면 추후 업데이트 할 것이다.② box = 100; =&gt; 100 비어있던 변수 box에 100 이라는 숫자형/정수형 데이터가 대입됐다. 미정이던 변수형이 지정됨과 동시에 100이라는 값이 저장된 것이다.③ box = 30; =&gt; 30 100 이라는 값이 저장된 변수 box에 30 이라는 값이 저장됐다. 기존에 저장돼 있던 값 100은 삭제되고, 다시 null 상태가 된 자리에 30 이라는 값이 새롭게 저장되는 것이다. 각각의 변수가 차지하는 메모리 공간은 지정돼 있기 때문에 배열이나 구조체를 사용하지 않는 이상 하나의 변수에는 하나의 값만 저장된다. 2. 변수에 저장할 수 있는 자료형(Data Type) 문자형(String), 숫자형(Number), 논리형(Boolean), 빈 데이터(Undefined) 문자형(String) 문자나 숫자 를 큰따옴표(“ “) 또는 작은따옴표(‘ ‘) 로 감싼 형태 HTML 태그를 포함하여 출력할 경우 태그로 인식 문자형 데이터 기본형123&lt;script&gt; var 변수 = \"사용할 문자나 숫자\";&lt;/script&gt; 문자형 변수 출력1234567891011&lt;script&gt; var s = \"javascript\"; var num = \"100\"; var tag = \"&lt;h1&gt; String &lt;/h1&gt;\"; var img = '&lt;img src=\"images/chrome.png\"&gt;'; document.write(s + \" \"); document.write(num + \"&lt;br&gt;\"); document.write(tag + \"\\n\"); document.write(img); &lt;/script&gt; html 태그는 인식된다는 말에 img 태그로 이미지도 출력해봤다. 정상적으로 출력되는 걸 확인할 수 있었다. 이미 알고 있던 내용인데 자주 사용하지 않으니 잊고 있었다.. 복습의 중요성ㅠㅠ 숫자형(Number) 단어 의미 그대로 숫자 를 의미 “100”과 같이 큰따옴표가 숫자를 감싸고 있다면 문자형 데이터 Number(“100”) 형태로 문자형 데이터를 숫자형으로 변경 가능 Java의 Integer.parseInt(“100”); 과 같은 기능 숫자형 데이터 기본형1234&lt;script&gt; var 변수 = 숫자; var 변수 = Number(\"문자형 숫자\");&lt;/script&gt; 숫자형 변수 출력123456789101112131415&lt;script&gt; var number1 = 100; var string = \"500\"; var number2_string = Number(string); var number3 = Number(\"500\"); document.write(\"number1 값 : \" + number1 + \"&lt;br&gt;\" + \"number1 변수형: \" + typeof(number1) + \"&lt;br&gt;\" + \"string 값 : \" + string + \"&lt;br&gt;\" + \"string 변수형: \" + typeof(string) + \"&lt;br&gt;\" + \"number2_string 값 : \" + number2_string + \"&lt;br&gt;\" + \"number2_string 변수형: \" + typeof(number2_string) + \"&lt;br&gt;\" + \"number3 값 : \" + number3 + \"&lt;br&gt;\" + \"number3 변수형: \" + typeof(number3) + \"&lt;br&gt;\"); &lt;/script&gt; typeof() 메서드를 이용해 자료형을 확인해봤다. 문자열이 저장돼 있던 변수 string의 자료형이 Number() 메서드를 통해 string에서 number로 바뀌는 것을 확인할 수 있었다. 논리형(Boolean) true(참) 또는 false(거짓) 만 저장 가능 2개 의 데이터를 비교 할 때 나오는 결과 ‘100보다 10이 크다’는 잘못된 비교이므로 false 반환 논리형 데이터 기본형1234&lt;script&gt; var 변수 = true or false; var 변수 = Boolean(데이터);&lt;/script&gt; 논리형 변수 출력12345678910111213&lt;script&gt; var boolean1 = true; var boolean2 = 10 &gt;= 100; var _string = Boolean(\"hello\"); var _null = Boolean(null); var _int = Boolean(10); document.write(\"boolean1 값 : \" + boolean1 + \"&lt;br&gt;\" + \"boolean2 값 : \" + boolean2 + \"&lt;br&gt;\" + \"_string 값 : \" + _string + \"&lt;br&gt;\" + \"_null 값 : \" + _null + \"&lt;br&gt;\" + \"_int 값 : \" + _int + \"&lt;br&gt;\"); &lt;/script&gt; Boolean() 메서드가 잘 이해되지 않는다. 책에서는 데이터를 매개변수로 대입한다고 했는데 예제에서 문자열을 대입했다.문자열 “hello” =&gt; true숫자형 10 =&gt; truenull =&gt; false왜 이런 결과가 나오는걸까? 비어있는 값이기 때문에 true / false를 판단할 수 없어 false인 걸까? 그렇다면 “hello”와 10은 왜 true인 걸까? 자료형이 확실해서? 궁금하다… 추가 공부 후 업데이트 하자! 이유는 생각보다 간단했다. 이 또한 javascript 문법의 일부였다. 그리고 바로 다음 페이지에 있었다..Boolean() 메서드는 숫자 0, null, undefined, 빈 문자(“”) 를 제외한 모든 데이터에 true를 반환한다고 한다. 추가 테스트를 해 봤다. 1234567891011&lt;script&gt; var _0 = Boolean(0); var _null = Boolean(null); var _undefined = Boolean(undefined); var _nothing = Boolean(\"\"); document.write(\"_0 값 : \" + _0 + \"&lt;br&gt;\" + \"_null 값 : \" + _null + \"&lt;br&gt;\" + \"_undefined 값 : \" + _undefined + \"&lt;br&gt;\" + \"_nothing 값 : \" + _nothing + \"&lt;br&gt;\");&lt;/script&gt; null &amp; undefined 데이터 undefined 변수에 값이 등록되기 전의 기본값 null 변수에 저장된 값이 null인 경우 변수에 저장된 데이터를 비우고자 할 때 사용하는 값 null과 undefined 비교 출력12345678910111213141516171819 &lt;script&gt; var var1; var var2 = \"Hello\"; document.write(\"var1 : \" + var1 + \"&lt;br&gt;\"); document.write(\"var2 : \" + var2 + \"&lt;br&gt;\"); var2 = null; document.write(\"var2 : \" + var2); &lt;/script&gt; ``` ![[그림6] null과 undefined 변수 출력 결과](https://user-images.githubusercontent.com/24776203/46029377-37957c00-c12e-11e8-8b76-4b5d96b42811.png)&lt;br&gt; - &lt;backDeepViolet&gt;typeof&lt;/backDeepViolet&gt; - 지정한 데이터 또는 변수에 저장된 자료형 확인 ```html typeof 기본형 &lt;script&gt; typeof 변수; typeof 데이터; &lt;/script&gt; 변수 자료형 출력1234567&lt;Script&gt; var num = 100; var str = \"자바스크립트\"; document.write(\"변수 num 자료형 : \" + typeof num + \"&lt;br&gt;\"); document.write(\"변수 str 자료형 : \" + typeof str + \"&lt;br&gt;\"); document.write(\"데이터 true 자료형 : \" + typeof true);&lt;/script&gt; 3. 변수 선언 시 주의 사항 변수의 첫 글자 로는 영문자ㅡ $, _(언더바) 만 가능 var 1num = 10; (X) var $num = 10; (O) 변수의 첫 글자 다음 은 영문자, 숫자, $, _(언더바) 만 가능 var 100num = 10; (X) var num100 = 10; (O) 변수명 으로 예약어 사용 불가 예약어 이미 자바스크립트에서 사용중인 단어 document, location, window 등 var document = 10; (X) var num = 10; (O) 변수명 작명 시, 의미부여 var num = “hello”; (X) var num = 10; (O) 변수명 작명 시, 대소문자 구분 var num = 10; document.write(Num); (X) var num = 10; document.write(num); (X) 코드를 실행할 때 이상한 점이 있다.document.write() 메서드에서 줄바꿈(“\\n”)이 적용되질 않는다.alert()에 테스트 했을 때는 또 잘 된다.혹시나 write()는 한줄 작성만 되는 건가 하는 생각에 구글링 해봤지만 역시나 헛생각이었다..대체 왜 안되는거지?!Visual Studio Code의 문제인지, Chrome이 문제인지 몇가지 테스트를 더 해봐야 할 것 같다.다행인 건 태그는 먹는다는 점이다.문제를 해결하기 전 까지 실행 결과는 alert()으로 출력하고 이미지 등 특별한 경우에는 write()를 쓸 예정이다. 개행문자가 적용되지 않아도 크게 문제는 없다. 단지 가독성을 높이고 싶은 욕심이랄까. 다음장 : 02-3. 연산자 Github Page에서 글씨에 색깔 넣는 법을 발견했다!!!그 동안 적용하고 싶어서 많이 검색해봤었는데 다들 마크다운 문법에서는 불가능하다고 했다.하지만 간단한 CSS 코드로 가능하다!! 조만간 이 주제로 포스팅해야지ㅎㅎㅎ 빨간색이 되면 보라색도 되고 글자색이 되면 형광펜도 되지","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"변수","slug":"변수","permalink":"http://nayoungkim0918.github.io/tags/변수/"},{"name":"undefined","slug":"undefined","permalink":"http://nayoungkim0918.github.io/tags/undefined/"}]},{"title":"[Do It!] 02-1. 자바스크립트 기초 문법","slug":"Do-It/Do-It-02-1","date":"2018-09-11T08:59:08.000Z","updated":"2018-09-11T08:59:08.000Z","comments":true,"path":"2018/09/11/Do-It/Do-It-02-1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-02-1/","excerpt":"","text":"02. 자바스크립트 기초 문법02-1. 자바스크립트 기초 문법02-2. 변수02-3. 연산자02-4. 총정리 실습!02-5. Mission! 02-1. 자바스크립트 기초 문법1. 자바스크립트 선언문 선언문 자바스크립트 코드를 작성할 영역을 선언하는 것 스크립트 영역 선언문 시작 : 선언문 종료 : 선언문123&lt;script&gt; 자바스크립트 코드;&lt;/script&gt; 선언 영역 head 태그 영역 국내 대부분의 개발자 사용 body 태그 영역 실습 [02_1_statement_test.html] 7행 document : 문서 객체 write() : 문서 출력 메서드, 괄호 안의 문자열 출력02_1statement_test.html123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script&gt; document.write(\"환영합니다\"); &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;/body&gt;&lt;/html&gt; 2. 자바스크립트 주석 처리 주석 자바스크립트 선언문 안에서 코드가 아닌 설명글 한 줄 주석 : // 한 줄 설명글 여러 줄 주석 : /* 여러 줄 설명글 */주석1234567891011&lt;!-- HTML 소스의 설명글은 이렇게 처리합니다. 한 줄과 여러 줄 동일합니다. --&gt;&lt;script&gt; //한 줄 설명글인 경우 /* 설명글이 여러 줄인 경우 이렇게 처리합니다. */&lt;/script&gt; 3. 내부 스크립트 외부로 분리하기 외부 자바스크립트 연동 코드로 파일 연결 내부에 자바스크립트 작성 마지막에 외부로 분리하는 작업 필요 목적 프로젝트 관리의 원활 손쉽게 소스 찾기 타인에 의한 소스 손상 방지 방법 따로 파일을 만들어 저장 HTML파일과 JS파일을 분리 HTML 내에서 JS파일 연동 1&lt;script src=\"JS 파일 경로\"&gt;&lt;/script&gt; 내부 스크립트 분리하기① JS 파일 생성 js/02_1_example.js1document.write(\"환영합니다\"); ② 새 html 파일 생성 후 JS 파일 연동`html 02_1_import_test.html &lt;!DOCTYPE html&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;외부 자바스크립트 연동&lt;/title&gt; &lt;script src=&quot;js/02_1_example.js&quot;&gt;&lt;/script&gt; ` 4. 코드 입력 시 주의사항 대/소문자 구분하기 날짜 객체 생성 : New date() : (X) 날짜 객체 생성 : new Date() : (O) 코드 한 줄의 끝에는 반드시 세미콜론(;) 마침표 역할 한 줄에 여러 개의 코드를 작성가능 document.write(“hi”) document.write(“bye”) : (X) document.write(“hi”); document.write(“bye”); : (O) 가독성을 위해 코드는 가급적 한 줄에 한 문장만! 큰따옴표(“ “)와 작은따옴표(‘ ‘) 겹침 오류 주의 문자형 데이터 작성 시 큰따옴표 겹침 오류 document.write(“책에 “자바스크립트는 대소문자를 구분해야 합니다”라고 나와 있다.”); 잘된 예 document.write(‘책에 “자바스크립트는 대소문자를 구분해야 합니다”라고 나와 있다.’); document.write(“책에 \\”자바스크립트는 대소문자를 구분해야 합니다\\”라고 나와 있다.”); 괄호 짝 맞추기 소괄호( ), 중괄호{ }, 대괄호[ ] document.write(“welcome!”; : (X) document.wirte(“weilcome”); : (O) &lt;hr&gt; __다음장 : % link 02-2. 변수 https://nayoungkim0918.github.io/2018/09/13/Do-It/Do-It-02-2/ %}__","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"주석","slug":"주석","permalink":"http://nayoungkim0918.github.io/tags/주석/"},{"name":"외부 스크립트 연동","slug":"외부-스크립트-연동","permalink":"http://nayoungkim0918.github.io/tags/외부-스크립트-연동/"}]},{"title":"[Do It!] 01-3. 자바스크립트 맛보기 예제","slug":"Do-It/Do-It-01-3","date":"2018-09-11T05:55:31.000Z","updated":"2018-09-11T05:55:31.000Z","comments":true,"path":"2018/09/11/Do-It/Do-It-01-3/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-01-3/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-3. 자바스크립트 맛보기 예제 맛보기 예제 질의응답 창 사용 키보드로 나이 입력 받은 후 출력 20세 이상이면 “당신은 성인입니다.” 20세 미만이면 “당신은 미성년자입니다.” 1. 자바스크립트로 간단한 실행문 작성하기 [test_example.html] 생성 [Ctrl + N] / 원하는 위치에 마우스 우클릭 [새 파일] [Ctrl + S] 후 [test_example.html] 로 저장 html:5 [Tab] body 에 코드 작성01_03_test_example.html1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;맛보기 예제&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;script&gt; var age = prompt(\"당신의 나이는?\", \"0\"); if(age &gt;= 20) &#123; document.write(\"당신은 성인입니다.\"); &#125; else&#123; document.write(\"당신은 미성년자입니다.\"); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Chrome으로 실행 [Alt + B] 질의응답 창 당신의 나이는? 나이 입력 후 [확인] 페이지에 출력 20 이상 : 당신은 성인입니다. 20 미만 : 당신은 미성년자입니다. …다음장 : 02-1. 자바스크립트 기초 문법","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"}]},{"title":"[Do It!] 01-2. 개발 환경 준비하기","slug":"Do-It/Do-It-01_2","date":"2018-09-10T18:21:00.000Z","updated":"2018-10-20T17:06:56.874Z","comments":true,"path":"2018/09/11/Do-It/Do-It-01_2/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-01_2/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-2. 개발 환경 준비하기1. 크롬 브라우저 설치하고 개발자 도구 살펴보기 Browser Download https://goo.gl/bcamzC [Chrome 다운로드] 클릭 설치 개발자 도구 크롬 브라우저 실행 메뉴 펼침 버튼(Ξ) 클릭 F12 클릭 패널의 기능 패널 기능 Elementes HTML(Elements) 요소에 적용된 스타일(CSS) 체크 Console 자바스크립트 오류 체크, 디버깅(Debugging) Source 브라우저가 자바스크립트 소스를 파싱(Parsing) 해오는 과정 체크, 오류 체크, 디버깅 단어 의미 parsing 저장된 값을 원하는 형식의 값으로 가공해 읽어오는 것 debugging 버그를 검사하고 수정하는 작업 bug(버그) 프로그래머가 잘못 코딩한 프로그램 실행 시 오류(error) 발생 2. 자바스크립트 편집기 설치와 사용법 자바스크립트 편집기(Editor) 윈도우 기본 메모장(notepad)도 사용 가능 단점 가독성 100% 손코딩 쉽고 편한 편집 Edit Plus, Notepad++, Atom, Sublime Text, Brackets, Webstorm, Visual Studio Code Visual Studio Code 설치하기 https://code.visualstudio.com ‘사용권 계약에 동의함’ 항목 체크 후 [다음] 설치 완료 후 [마침] VS Code 실행 확인 레이아웃 기본 환경 구성 View bar, Side bar, Editor Groups, Panel, Status Bar 구성 기능 뷰 바 사이드 바 기능 변경(탐색기, 검색, Git, 디버거, 확장) 사이드 바 프로젝트 작업 동안 기능 바꿔가며 사용 가능 편집기 그룹 소스 편집 영역, 최대 3개까지 창 분할 가능, 동시에 여러 파일 로드 가능 패널 출력, 디버그 정보, 오류, 경고 등의 표시 상태 바 현재 프로젝트와 편집하고 있는 파일의 정보 제공 단어 의미 탐색기 작업 중인 폴더와 파일 관리 검색 문서 안의 내용 검색 Git Git을 이용한 버전 관리 디버거 프로그래밍 오류 디버깅 확장 기능 확장, 확장 기능 목록 표시 화면 색상 변경 [파일 - 기본 설정 - 색 테마] _ ‘Light + (default light)’ 선택 확장 기능 이용해 HTML 문서를 크롬 브라우저에서 바로 열기 실습 파일 저장할 폴더 생성(Workspace) C:\\Visual Studio Code\\visual_studio_code_workspace [뷰 바 - 탐색기] 사이드 바 우클릭 [폴더 열기] 생성한 ‘visual_studio_code_workspace’ 폴더 선택 탐색기에 로드된 폴더 확인 폴더를 탐색기로 드래그 해도 로드 가능 새 HTML 파일 생성 탐색기 폴더에 마우스 포인터 [새 파일] 아이콘 클릭 원하는 위치에 마우스 포인터 후 우클릭 [새 파일] 가능 아이콘 순서대로 새 파일 / 새 폴더 / 새로고침 / 열린 폴더 접기 [ex1_1.html] 생성 [ex1_1.html] 작성 VS Code의 Emmet 기능 사용 에디터의 이점을 활용하자! Emmet : HTML, CSS를 약식으로 표기하여 작성할 수 있는 기능 html:5 [tab] - 대문자 입력시 태그화 됨 12줄의 기본 코드가 자동으로 입력123456789101112&lt;!DOCTYPE html&gt;&lt;html lang=\"ko\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 결과 확인 탐색기 폴더에 마우스 포인터 [새 파일] 아이콘 클릭 원하는 위치에 마우스 포인터 후 우클릭 [새 파일] 가능 아이콘 순서대로 새 파일 / 새 폴더 / 새로고침 / 열린 폴더 접기 [ex1_1.html] 생성 body 채우기 기본 12줄 중 10줄에 코드 입력 [Ctrl + S] 로 저장ex1_1.html1239: &lt;body&gt;10: &lt;h1&gt;Welcome My World&lt;/h1&gt;11: &lt;/body&gt; &lt;br&gt; &lt;hr&gt; Chrome으로 HTML 문서 열기가 책에서는 [Ctrl + Alt + O] 라고 했지만, 실제로는 [Alt + B] 였다. 이유는 아직... 하지만 해당 확장 기능의 메뉴얼에도 [Alt + B] 가 나와 았다. &lt;hr&gt; __다음장 : {% link 01-3. 자바스크립트 맛보기 예제 https://nayoungkim0918.github.io/2018/09/11/Do-It/Do-It-01-3/ %}__","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"html","slug":"html","permalink":"http://nayoungkim0918.github.io/tags/html/"},{"name":"chrome","slug":"chrome","permalink":"http://nayoungkim0918.github.io/tags/chrome/"},{"name":"visual studio code","slug":"visual-studio-code","permalink":"http://nayoungkim0918.github.io/tags/visual-studio-code/"}]},{"title":"Hueman 테마를 적용하다","slug":"post-theme-hueman","date":"2018-09-10T17:51:00.000Z","updated":"2018-09-10T20:20:52.066Z","comments":true,"path":"2018/09/11/post-theme-hueman/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/post-theme-hueman/","excerpt":"","text":"","categories":[{"name":"HEXO","slug":"HEXO","permalink":"http://nayoungkim0918.github.io/categories/HEXO/"},{"name":"Setting","slug":"HEXO/Setting","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/"},{"name":"테마","slug":"HEXO/Setting/테마","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/테마/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://nayoungkim0918.github.io/tags/hexo/"},{"name":"hueman","slug":"hueman","permalink":"http://nayoungkim0918.github.io/tags/hueman/"},{"name":"theme","slug":"theme","permalink":"http://nayoungkim0918.github.io/tags/theme/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-09-10T16:24:14.093Z","updated":"2018-09-10T20:21:27.524Z","comments":true,"path":"2018/09/11/hello-world/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"HEXO","slug":"HEXO","permalink":"http://nayoungkim0918.github.io/categories/HEXO/"},{"name":"Setting","slug":"HEXO/Setting","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/"},{"name":"퀵스타트","slug":"HEXO/Setting/퀵스타트","permalink":"http://nayoungkim0918.github.io/categories/HEXO/Setting/퀵스타트/"}],"tags":[]},{"title":"GitHub Page로 블로그 시작하기","slug":"GitHubPage-Start","date":"2018-09-07T00:30:00.000Z","updated":"2018-09-10T20:22:03.550Z","comments":true,"path":"2018/09/07/GitHubPage-Start/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/07/GitHubPage-Start/","excerpt":"","text":"예전부터 블로그를 만드는 것에 관심이 있었다.공부내용도 저장하고, 나중에 다시 찾는 것도 검색으로 쉽게 하려고 만들고 싶었는데프로그래밍 공부 블로그로는 깃허브 페이지가 많이 사용되는 것을 보고 한번 개설해봤다.네이버 블로그나 카페를 만드는 정도로 생각했는데 생각보다 어려웠다….ㅠㅠ그냥 page 만들기 이런 버튼이 있을 줄 알았는데jekyll로 테마도 입혀야 했고, 테마를 커스터마이징 해야 했다.첫 포스팅까지 1시간은 더 걸린 것 같다..아직 손 볼 게 많지만 그래도 조금은 다듬어진 페이지를 보니 뿌듯하다 :D이 블로그의 목표는 더도말고 “꾸준히 글 올리기!” 이다.소재는 공부하는 책 내용 정리, 실습 내용, 코드 설명, 에러 기록 등 프로그래밍에 관련된 주제로 하려 한다.관리가 익숙해지면 프로그래밍 외에도 다양한 소재를 추가할 예정이지만,일단은 공부내용을 기록하는 것에 집중하려 한다ㅎㅎ열심히 해봐야지:D","categories":[],"tags":[{"name":"start","slug":"start","permalink":"http://nayoungkim0918.github.io/tags/start/"},{"name":"GitHubPage","slug":"GitHubPage","permalink":"http://nayoungkim0918.github.io/tags/GitHubPage/"},{"name":"Blog","slug":"Blog","permalink":"http://nayoungkim0918.github.io/tags/Blog/"}]},{"title":"[Do It!] 01-1. 처음 만나는 자바스크립트","slug":"Do-It/Do-It-01_1","date":"2018-09-06T13:20:00.000Z","updated":"2018-10-20T17:01:26.150Z","comments":true,"path":"2018/09/06/Do-It/Do-It-01_1/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/06/Do-It/Do-It-01_1/","excerpt":"","text":"01. 자바스크립트 시작하기 Front-End 개발 개념 자바스크립트 개념 왜 자바스크립트를 배워야 하는가 편집 프로그램 설치 Google Chrome 브라우저 설치 Editor 사용법 익히기 간단한 예제 01-2. 처음 만나는 자바스크립트1. 프런트엔드 개발 이해하기 자바스크립트 Front-End 개발 언어 정적인 웹 문서에 동작 부여 현업에서의 프로젝트 개발 순서 개발 의뢰 &gt; 기획안 작성 &gt; UI 시안 &gt; Front-End &gt; Back-End 1단계 : 고객(Client) 사이트 개발 의뢰 2단계 : 개발사 기획안 작성(고객 요구 커스터마이징) 3단계 : 디자이너 기획안을 토대로 UI(User Interface) 디자인 4단계 : 퍼블리셔= 디자인 이미지파일을 이용해 HTML문서 작성, CSS를 이용해 정적인 웹 문서 완성 HTML : Hyper Text Markup Language 정적인 웹 문서 : 사용자(사이트 방문자)가 어떤 동작을 해도 작동하지 않는 문서 5단계 : 백엔드 개발자 HTML문서에 서버 언어(ASP, PHP, JSP 등)를 사용해 보이지 않는 영역 개발 보이지 않는 영역 : 사용자 입력 데이터를 DB에 저장하거나 검사 2. 자바스크립트의 이해__ 자바스크립트의 탄생 배경 최초의 자바스크립트 회사명 : 넷스케이프(1995년 인터넷 브라우저 최고 점유율. 내비게이터_Navigater) 개발자 : 브렌든 아이크(Brendan Eich, 1961 ~) 개발명 : 모카(Mocha) 첫번째 이름 변경 라이브스크립트(LiveScript) 두번쨰 이름 변경 합병 : 넷스케이프 + 썬마이크로 시스템즈(Sun Microsystems, 현재 오라클과 합병, JAVA로 유명) 자바스크립트(javascript) 지켜지지 않은 언어의 표준화 원인 : 여러 개발 회사가 각자 다른 이름으로 스크립트 언어 개발 마이크로소프트(Microsoft) : JScript + IE 3.0 때문에 IE 8 이하, 크롬, 사파리, 파이어폭스 등에서는 자바스크립트가 호환되지 않음 자바스크립트의 표준화 넷스케이프의 표준화 요청 국제 정보통시표준화기구(ECMA, European Computer Manufacture Association) 1996년 11월 : ECMA-262 표준 명세 제작 1997년 7월 : ECMA 1 버전 완성 ES1(ECMA-262 1st edition) ES6(ECMA-262 6th edition) : 현재 사용 중 일부 브라우저는 ES5의 기능만 지원 : ES6를 사용한다면 브라우저 지원 여부 체크 필수 자바스크립트로 할 수 있는 것 과거 사용자(Client) 컴퓨터에서만 동작하는 언어 HTML5 내장 API의 언어 : API 사용에 필수 내장 API : Geolocation, Canvas, Drag&amp;Drop 등 현재 : 서버(Server)에서도 작동, 다양한 UI 개발에 사용 자바스크립트로 제작한 라이브러리 등장 라이브러리 : 제이쿼리(Jquery), 앵귤러(Angular)JS, 리액트(React)JS, 노드(Node)Js, 폰갭(PhoneGap) UI 개발 사이트, 모바일 웹, 스마트TV 우선 러프하게 책 내용을 정리해봤다.내용을 좀 더 수정하고, 이미지도 추가할 생각이다.첫 장을 읽으면서 느낀 점은, 정말 기본에 충실한 책인 것 같다는 점이다.자바스크립트가 무엇인지 알려주기 위해서프로젝트 개발 순서, 프런트엔드의 개념, 웹페이지가 동작하는 기본 원리까지 설명하는 점이 참 좋았다.이미 알고 있던 내용이 대부분이긴 하지만, 시작이 이렇다면 아직 미숙한 뒷부분도 손쉽게 이해할 수 있을 것 같다:D다음 포스트 : 01-2. 개발 환경 준비하기Chrome, Visual Studio Code 설치 및 자바스크립트 맛보기","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"},{"name":"Javascript","slug":"Book/Do-It/자바스크립트-제이쿼리-입문/Javascript","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/Javascript/"}],"tags":[{"name":"Do_It","slug":"Do-It","permalink":"http://nayoungkim0918.github.io/tags/Do-It/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"}]},{"title":"Do it! 자바스크립트+제이쿼리 입문","slug":"Do-It/Do_It-js_jq-start","date":"2018-09-06T11:33:00.000Z","updated":"2018-10-19T11:37:03.471Z","comments":true,"path":"2018/09/06/Do-It/Do_It-js_jq-start/","link":"","permalink":"http://nayoungkim0918.github.io/2018/09/06/Do-It/Do_It-js_jq-start/","excerpt":"","text":"새로운 책을 구매했다.서점에 갈 때 마다 유독 눈에 띄던 Do it! 시리즈.내용도 알차고 기초개념부터 다양한 실습까지 할 수 있어서 javascript와 jqeury를 복습할 겸 구매했다.블로그 개설 후 공부하는 첫번째 책이니만큼 루즈해지지 않고 열심히 공부해야겠다! [1] 기초부터 시작하는 자바스크립트 01. 자바스크립트 시작하기 01-1. 처음 만나는 자바스크립트 01-2. 개발 환경 준비하기 01-3. 자바스크립트 맛보기 예제 02. 자바스크립트 기초 문법 02-1. 자바스크립트 기초 문법 02-2. 변수 02-3. 연산자 02-4. 총정리 실습! 02-5. Mission! 03. 제어문 03-1. 제어문이란? 03-2. 조건문 03-3. 선택문 03-4. 반복문 03-5. Mission! 04. 객체 04-1. 객체 04-2. 내장 객체 04-3. 브라우저 객체 모델 04-4. 총정리 실습! 04-3. Mission! 05. 함수 05-1. 함수 05-2. 함수에서 return 문의 역할 05-3. 함수 스코프 개념 이해 05-4. 객체 생성자 함수의 활용 05-5. 자바스크립트 내장 함수 [2] 자바스크립트를 더 쉽게 해주는 제이쿼리 06. 제이쿼리 문서 객체 선택자와 조작법 06-1. 제이쿼리 기본 다지기 06-2. 선택자 06-3. 제이쿼리 탐색 선택자 06-4. 객체 조작 07. 제이쿼리 이벤트 07-1. 이벤트 등록 메서드 07-2. 그룹 이벤트 등록 및 삭제하기 08. 다양한 효과와 애니메이션 08-1. 효과 및 애니메이션 메서드 08-2. 애니메이션 효과 제어 메서드 09. 제이쿼리 비동기 방식 연동 09-1. Ajax 09-2. Ajax 관련 메서드 10. 제이쿼리 플러그인 10-1. 제이쿼리 플러그인이란? 10-2. 제이쿼리 UI 플러그인 활용하기 10-3. bxSlider 플러그인 활용하기 10-4. jquery-cookie 플러그인 활용하기 10-5. 플러그인 직접 제작하기 [3] 자바스크립트 + 제이쿼리 실무 예제 11. 반응형 웹 UI 만들기 11-1. 프로젝트 구성과 HTML 문서 설계하기 11-2. 공통 UI 만들기 11-3. 메인 콘텐츠 영역 UI 만들기 스페셜. 크롬 브라우저로 디버깅하기 콘솔 패널을 이용한 디버깅 소스 패널을 이용한 디버깅 소스 패널의 중단점을 이용한 디버깅 소스 패널의 중단점과 Watch를 이용한 변수 체크","categories":[{"name":"Book","slug":"Book","permalink":"http://nayoungkim0918.github.io/categories/Book/"},{"name":"Do It","slug":"Book/Do-It","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/"},{"name":"자바스크립트 + 제이쿼리 입문","slug":"Book/Do-It/자바스크립트-제이쿼리-입문","permalink":"http://nayoungkim0918.github.io/categories/Book/Do-It/자바스크립트-제이쿼리-입문/"}],"tags":[{"name":"start","slug":"start","permalink":"http://nayoungkim0918.github.io/tags/start/"},{"name":"javascript","slug":"javascript","permalink":"http://nayoungkim0918.github.io/tags/javascript/"},{"name":"출판","slug":"출판","permalink":"http://nayoungkim0918.github.io/tags/출판/"},{"name":"저자","slug":"저자","permalink":"http://nayoungkim0918.github.io/tags/저자/"},{"name":"jquery","slug":"jquery","permalink":"http://nayoungkim0918.github.io/tags/jquery/"},{"name":"DoIt시리즈","slug":"DoIt시리즈","permalink":"http://nayoungkim0918.github.io/tags/DoIt시리즈/"},{"name":"DoIt!_자바스크립트+제이쿼리입문","slug":"DoIt-자바스크립트-제이쿼리입문","permalink":"http://nayoungkim0918.github.io/tags/DoIt-자바스크립트-제이쿼리입문/"},{"name":"이지스퍼블리싱","slug":"이지스퍼블리싱","permalink":"http://nayoungkim0918.github.io/tags/이지스퍼블리싱/"},{"name":"정인용","slug":"정인용","permalink":"http://nayoungkim0918.github.io/tags/정인용/"}]}]}